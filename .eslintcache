[{"D:\\fuzzy work\\mes_web\\src\\index.tsx":"1","D:\\fuzzy work\\mes_web\\src\\App.tsx":"2","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts":"3","D:\\fuzzy work\\mes_web\\src\\components\\index.ts":"4","D:\\fuzzy work\\mes_web\\src\\tools\\index.ts":"5","D:\\fuzzy work\\mes_web\\src\\views\\index.ts":"6","D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx":"7","D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx":"8","D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx":"9","D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx":"10","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx":"11","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx":"12","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx":"13","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx":"14","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx":"15","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx":"16","D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx":"17","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts":"18","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts":"19","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx":"20","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx":"21","D:\\fuzzy work\\mes_web\\src\\api\\login.ts":"22","D:\\fuzzy work\\mes_web\\src\\api\\index.ts":"23","D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts":"24"},{"size":786,"mtime":1609119180528,"results":"25","hashOfConfig":"26"},{"size":1567,"mtime":1614586645986,"results":"27","hashOfConfig":"26"},{"size":2313,"mtime":1610603944145,"results":"28","hashOfConfig":"26"},{"size":146,"mtime":1609119180528,"results":"29","hashOfConfig":"26"},{"size":659,"mtime":1609216019352,"results":"30","hashOfConfig":"26"},{"size":1125,"mtime":1609212523313,"results":"31","hashOfConfig":"26"},{"size":4951,"mtime":1614563879028,"results":"32","hashOfConfig":"26"},{"size":3106,"mtime":1609119180520,"results":"33","hashOfConfig":"26"},{"size":258,"mtime":1609119180520,"results":"34","hashOfConfig":"26"},{"size":559,"mtime":1609119180538,"results":"35","hashOfConfig":"26"},{"size":6272,"mtime":1610616310953,"results":"36","hashOfConfig":"26"},{"size":2872,"mtime":1609310520615,"results":"37","hashOfConfig":"26"},{"size":5051,"mtime":1610607641026,"results":"38","hashOfConfig":"26"},{"size":7880,"mtime":1614674628078,"results":"39","hashOfConfig":"26"},{"size":3530,"mtime":1609119180538,"results":"40","hashOfConfig":"26"},{"size":2663,"mtime":1609119180528,"results":"41","hashOfConfig":"26"},{"size":2821,"mtime":1614069972652,"results":"42","hashOfConfig":"26"},{"size":377,"mtime":1613613143952,"results":"43","hashOfConfig":"26"},{"size":376,"mtime":1609136548438,"results":"44","hashOfConfig":"26"},{"size":9992,"mtime":1609212390353,"results":"45","hashOfConfig":"26"},{"size":12119,"mtime":1610612613671,"results":"46","hashOfConfig":"26"},{"size":192,"mtime":1614563427118,"results":"47","hashOfConfig":"26"},{"size":899,"mtime":1614070414376,"results":"48","hashOfConfig":"26"},{"size":346,"mtime":1614060183221,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"12tl25p",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"D:\\fuzzy work\\mes_web\\src\\index.tsx",["106"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { mainRoutes } from './routes'\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            mainRoutes.map(route => (\r\n              <Route path={route.pathName} component={route.component} key={route.pathName} />\r\n            ))\r\n          }\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  </ConfigProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n",["107","108"],"D:\\fuzzy work\\mes_web\\src\\App.tsx",["109"],"import './App.less'\r\nimport { Frame, Loading } from './components';\r\nimport { Suspense, useState, FC, ReactElement } from 'react'\r\nimport { adminRoutes } from './routes'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { insertUserId } from './tools'\r\n\r\nconst App: FC = (): ReactElement => {\r\n  const [isLogin, setIsLogin] = useState<boolean>(localStorage.getItem('key') ? true : false)\r\n\r\n  return (\r\n    isLogin\r\n      ?\r\n      <Frame>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => (\r\n                route.isSubMenu ?\r\n                  route.subMenu.map(subRoute => (\r\n                    <Route\r\n                      path={subRoute.pathName}\r\n                      key={subRoute.pathName}\r\n                      component={subRoute.component}\r\n                      exact={subRoute.exact}\r\n                    />\r\n                  ))\r\n                  :\r\n                  <Route\r\n                    path={route.pathName}\r\n                    key={route.pathName}\r\n                    component={route.component}\r\n                    exact={route.exact}\r\n                  />\r\n              ))\r\n            }\r\n            <Redirect\r\n              // you need insert userid here\r\n              to={insertUserId(adminRoutes[0].pathName, 'my-userid')}\r\n              from=\"/\"\r\n              exact />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Frame>\r\n      :\r\n      <Redirect to=\"/login\" />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx",["110","111","112"],"import React, { FC, ReactElement } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb,\r\n    Space\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order.less'\r\nimport { ISearch } from './typings'\r\nimport moment from 'moment';\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst ProductionOrders: FC = (props: any): ReactElement => {\r\n    const [form] = Form.useForm()\r\n    const onFinish = (values: ISearch) => {\r\n        console.log(values)\r\n    }\r\n\r\n    const add_new_order = () => {\r\n        // you need insert userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order')\r\n    }\r\n\r\n    const columns = [\r\n        { title: '生产订单编号', dataIndex: 'order_id', key: 'order_id' },\r\n        { title: '包含产品数量', dataIndex: 'order_amount', key: 'order_amount' },\r\n        { title: '开单时间', dataIndex: 'order_start_time', key: 'order_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'order_finish_time', key: 'order_finish_time' },\r\n        { title: '是否加急', dataIndex: 'order_in_need', key: 'order_in_need' },\r\n        { title: '订单负责人', dataIndex: 'order_response_man', key: 'order_response_man' },\r\n        { title: '操作', key: 'order_action', render: () => (<a>编辑</a>) },\r\n    ]\r\n\r\n    const expandedRowRender = () => {\r\n        const columns = [\r\n            { title: '产品序列号', dataIndex: 'device_id', key: 'device_id' },\r\n            { title: '产品料号', dataIndex: 'device_type', key: 'device_type' },\r\n            { title: '产品名称', dataIndex: 'device_name', key: 'device_name' },\r\n            { title: '开始时间', dataIndex: 'device_start_time', key: 'device_start_time' },\r\n            { title: '计划完成时间', dataIndex: 'device_end_time', key: 'device_end_time' },\r\n        ]\r\n\r\n        const data = [\r\n            { key: 0, device_id: '123456', device_type: '02020103', device_name: '接地箱1', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' },\r\n            { key: 1, device_id: '123456', device_type: '02020103', device_name: '接地箱2', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' }\r\n        ]\r\n        return <Table className=\"sub-table\" bordered={true} columns={columns} dataSource={data} pagination={false} />;\r\n    }\r\n\r\n\r\n    const data = [\r\n        { key: 0, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '是', order_response_man: '张三' },\r\n        { key: 1, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '李四' },\r\n        { key: 2, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '王五' },\r\n        { key: 3, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '赵六' },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"生产订单列表\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Button icon={<PlusOutlined />} shape=\"round\" type=\"primary\" onClick={add_new_order}>添加新订单</Button>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"生产订单编号\" name=\"order_num\">\r\n                            <Input placeholder=\"请输入生产订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单时间\" name=\"order_time\">\r\n                            <RangePicker\r\n                                ranges={{\r\n                                    '今天': [moment(), moment()],\r\n                                    '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单责任人\" name=\"order_response\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"zhangsan\">张三</Select.Option>\r\n                                <Select.Option value=\"lisi\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table\r\n                        bordered={true}\r\n                        columns={columns}\r\n                        expandable={{ expandedRowRender }}\r\n                        dataSource={data}\r\n                        rowClassName={(record, index) => {\r\n                            let className = 'light-row';\r\n                            if (index % 2 === 1) className = 'dark-row';\r\n                            return className;\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductionOrders;","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx",["113","114","115","116"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    DatePicker,\r\n    Switch,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order_add.less'\r\n\r\nexport default function ProductionOrdersAdd(props: any) {\r\n    const [form] = Form.useForm()\r\n    const columns = [\r\n        { title: '产品序列号', dataIndex: 'device_id', key: 'device_id' },\r\n        { title: '产品料号', dataIndex: 'device_type', key: 'device_type'  },\r\n        { title: '产品名称', dataIndex: 'device_name', key: 'device_name' },\r\n        { title: '开始时间', dataIndex: 'device_start_time', key: 'device_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'device_end_time', key: 'device_end_time' },\r\n        { title: '操作', key: 'order_action', render: () => (<a>编辑</a>) },\r\n    ]\r\n\r\n    const data = [\r\n        { key: 0, device_id: '123456', device_type: '02020103', device_name: '接地箱1', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' },\r\n        { key: 1, device_id: '123456', device_type: '02020103', device_name: '接地箱2', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' }\r\n    ]\r\n\r\n    const add_new_work = () => {\r\n        // you need add userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order/edit_work')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">生产订单编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"添加新订单\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                            <Button type=\"default\" shape=\"round\">取消</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"生产订单编号\" name=\"order_id\">\r\n                            <Input placeholder=\"请输入生产订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"开单时间\" name=\"order_start_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计划完成时间\" name=\"order_finish_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否加急\" name=\"order_in_need\">\r\n                            <Switch checkedChildren=\"加急\" unCheckedChildren=\"正常\" className=\"order-form-switch\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单负责人\" name=\"order_response_man\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"zhangsan\">张三</Select.Option>\r\n                                <Select.Option value=\"lisi\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        title=\"生产订单包含产品\"\r\n                        headStyle={{ fontWeight: 'bold' }}\r\n                        bodyStyle={{ padding: 0 }}\r\n                        extra={<Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={add_new_work}>添加新产品</Button>}\r\n                    >\r\n                        <Table\r\n                            bordered={true}\r\n                            columns={columns}\r\n                            dataSource={data}\r\n                            rowClassName={(record, index) => {\r\n                                let className = 'light-row';\r\n                                if (index % 2 === 1) className = 'dark-row';\r\n                                return className;\r\n                            }}\r\n                        />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx",["117"],"D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx",["118","119"],"import React, { useEffect } from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    message\r\n} from 'antd'\r\nimport { encryptAES, decryptAES } from '../../tools/aes'\r\nimport './login.less'\r\nimport { login } from '../../api/login'\r\n\r\ninterface UserInfo {\r\n    account: string | undefined;\r\n    password: string | undefined;\r\n    remember: boolean;\r\n}\r\n\r\nexport default function Login(props: any) {\r\n    const handleLogin = (values: UserInfo) => {\r\n        let { account, password, remember } = values;\r\n        if (remember) {\r\n            localStorage.setItem('user', encryptAES(JSON.stringify({ ac: account, pwd: password })))\r\n        }\r\n        login({ ac: encryptAES(account), pwd: encryptAES(password) }).then((res: any) => {\r\n            if (res.bRes) {\r\n                localStorage.setItem('key', encryptAES(res.Ticket))\r\n                props.history.push('/')\r\n            } else {\r\n                message.error('login error!');\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('user')) {\r\n            const { ac, pwd } = decryptAES(localStorage.getItem('user'))\r\n            login({ ac, pwd }).then((res: any) => {\r\n                if (res.bRes) {\r\n                    localStorage.setItem('key', encryptAES(res.Ticket))\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error('login error!');\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <h1 className=\"login-title\">新图维追溯管理系统</h1>\r\n                <Form className=\"login-form\" onFinish={handleLogin} initialValues={{ ['remember']: false }}>\r\n                    <Form.Item name=\"account\" style={{ paddingBottom: '0px' }}>\r\n                        <Input\r\n                            addonBefore=\"账号\"\r\n                            allowClear\r\n                            placeholder=\"请输入账号\"\r\n                            className=\"first-input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\" style={{ paddingTop: '0px' }}>\r\n                        <Input.Password\r\n                            addonBefore=\"密码\"\r\n                            placeholder=\"请输入密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>记住我</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button block type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx",["120","121"],"import React, { useState } from 'react'\r\nimport {\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Switch,\r\n    Table\r\n} from 'antd'\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc'\r\nimport arrayMove from 'array-move';\r\nimport './form_configuration.less'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport {\r\n    PreviewForm\r\n} from '../../../components'\r\n\r\nconst data = [\r\n    { key: 1, form_item_name: '表单子项1', index: 0 },\r\n    { key: 2, form_item_name: '表单子项2', index: 1 },\r\n    { key: 3, form_item_name: '表单子项3', index: 2 },\r\n]\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableList = SortableContainer(props => <tbody {...props} />);\r\n\r\nexport default function FormConfiguration() {\r\n\r\n    const DragHandle = SortableHandle(() => (\r\n        <MenuOutlined style={{ cursor: 'pointer', color: '#999' }} />\r\n    ));\r\n\r\n    const columns = [\r\n        { dataIndex: 'sort', width: 50, className: 'drag-visible', render: () => <DragHandle /> },\r\n        { title: '表单子项名称', dataIndex: 'form_item_name', className: 'drag-visible', },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button type=\"default\" shape=\"round\">编辑</Button>\r\n                    <Button type=\"primary\" shape=\"round\" danger>删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    const [dataSource, setDataSource] = useState(data)\r\n    const [formItemProps, setFormItemProps] = useState([])\r\n    const [basicOptions, setBasicOptions] = useState({})\r\n\r\n    const [form1] = Form.useForm()\r\n    const [form2] = Form.useForm()\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            setDataSource(newData)\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableList\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    // 表单基本配置提交\r\n    const handleSaveOptions = () => {\r\n        console.log(form1.getFieldsValue())\r\n        let { form_name } = form1.getFieldsValue()\r\n        setBasicOptions({\r\n            ...basicOptions,\r\n            form_name\r\n        })\r\n    }\r\n\r\n    // 添加表单子项提交\r\n    const handleAddItem = () => {\r\n        console.log(form2.getFieldsValue())\r\n        const {\r\n            item_name,\r\n            item_submit_type,\r\n            item_is_required,\r\n            item_is_readonly,\r\n            item_span\r\n        } = form2.getFieldsValue()\r\n        setFormItemProps([\r\n            ...formItemProps,\r\n            {\r\n                item_name,\r\n                item_submit_type,\r\n                item_is_required,\r\n                item_is_readonly,\r\n                item_span\r\n            }\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                title=\"表单配置\"\r\n                bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                extra={<Button type=\"primary\" shape=\"round\">提交保存</Button>}\r\n            >\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                            <Card\r\n                                title=\"表单基本配置\"\r\n                                bodyStyle={{ padding: '12px 20px' }}\r\n                                extra={<Button type='primary' shape=\"round\" onClick={handleSaveOptions}>提交保存</Button>}\r\n                            >\r\n                                <Form\r\n                                    layout=\"inline\"\r\n                                    form={form1}\r\n                                >\r\n                                    <Form.Item label=\"表单名称\" name=\"form_name\">\r\n                                        <Input placeholder=\"请输入表单名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"所属岗位\" name=\"belong_work\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"1\">1</Select.Option>\r\n                                            <Select.Option value=\"2\">2</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"所属步骤\" name=\"belong_step\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"1\">1</Select.Option>\r\n                                            <Select.Option value=\"2\">2</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"表单简称\" name=\"form_abbreviation\">\r\n                                        <Input placeholder=\"请输入表单简称\" />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Card>\r\n                            <Card\r\n                                title=\"新增表单子项\"\r\n                                bodyStyle={{ padding: '12px 20px' }}\r\n                                extra={<Button type=\"primary\" shape=\"round\" onClick={handleAddItem}>添加子项</Button>}\r\n                            >\r\n                                <Form\r\n                                    form={form2}\r\n                                    layout=\"inline\"\r\n                                    initialValues={{\r\n                                        ['item_is_required']: true,\r\n                                        ['item_is_readonly']: false\r\n                                    }}\r\n                                >\r\n                                    <Form.Item label=\"表单子项名称\" name=\"item_name\">\r\n                                        <Input placeholder=\"请输入表单子项名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"表单子项输入形式\" name=\"item_submit_type\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"input\">文字输入</Select.Option>\r\n                                            <Select.Option value=\"select\">下拉选择</Select.Option>\r\n                                            <Select.Option value=\"upload\">图片上传</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"是否必填\" name=\"item_is_required\" valuePropName=\"checked\">\r\n                                        <Switch />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"是否只读\" name=\"item_is_readonly\" valuePropName=\"checked\">\r\n                                        <Switch />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"子项所占行距\" name=\"item_span\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"8\">1/3 行</Select.Option>\r\n                                            <Select.Option value=\"12\">1/2 行</Select.Option>\r\n                                            <Select.Option value=\"24\">1 行</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Card>\r\n                            <Card\r\n                                title=\"表单子项列表\"\r\n                                bodyStyle={{ padding: '0' }}\r\n                            >\r\n                                <Table\r\n                                    pagination={false}\r\n                                    columns={columns}\r\n                                    dataSource={dataSource}\r\n                                    rowKey=\"index\"\r\n                                    bordered\r\n                                    components={{\r\n                                        body: {\r\n                                            wrapper: DraggableContainer,\r\n                                            row: DraggableBodyRow,\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </Card>\r\n                        </Space>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                            <Card\r\n                                title=\"表单预览\"\r\n                                bodyStyle={{ padding: '0 25px 25px 25px' }}\r\n                            >\r\n                                <PreviewForm basicOptions={basicOptions} formItemProps={formItemProps} />\r\n                            </Card>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx",["122"],"import React, { useRef, useState } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Select,\r\n    Space,\r\n    Tooltip,\r\n    Input,\r\n    Table,\r\n    List,\r\n    Breadcrumb,\r\n    message,\r\n    DatePicker\r\n} from 'antd'\r\nimport {\r\n    PrinterTwoTone,\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order_add_work.less'\r\nimport JsBarcode from 'jsbarcode'\r\nimport { isIFrame } from '../../../tools'\r\n\r\nconst _barcode_options = {\r\n    format: \"CODE128\",//选择要使用的条形码类型\r\n    width: 3,//设置条之间的宽度\r\n    height: 100,//高度\r\n    displayValue: true,//是否在条形码下方显示文字\r\n    fontOptions: 'bold',// 设置字体加粗\r\n    textAlign: \"middle\",//设置文本的水平对齐方式\r\n    textPosition: \"bottom\",//设置文本的垂直位置\r\n    textMargin: 5,//设置条形码和文本之间的间距\r\n    fontSize: 22,//设置文本的大小\r\n    background: \"#eee\",//设置条形码的背景\r\n    margin: 25//设置条形码周围的空白边距\r\n}\r\n\r\nexport default function ProductionOrdersAddWork(props) {\r\n    const [form] = Form.useForm()\r\n    const refBarContainer = useRef<HTMLCanvasElement>(null)\r\n    const mainRef = useRef<HTMLDivElement>(null)\r\n    const [isBarcodeExist, setIsBarcodeExist] = useState<boolean>(false)\r\n\r\n    const create_barcode = (values) => {\r\n        JsBarcode(refBarContainer.current, '020201112220A001', { ..._barcode_options, text: '02020111 2220A001' })\r\n        setIsBarcodeExist(true)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: '零件名称',\r\n            dataIndex: 'part_name',\r\n            key: 'part_name',\r\n        },\r\n        {\r\n            title: '零件ID',\r\n            dataIndex: 'part_id',\r\n            key: 'part_id',\r\n        },\r\n        {\r\n            title: '领料数量',\r\n            dataIndex: 'part_amount',\r\n            key: 'part_amount',\r\n        },\r\n        {\r\n            title: '领料时间',\r\n            dataIndex: 'time',\r\n            key: 'time',\r\n        },\r\n        {\r\n            title: '领料人',\r\n            dataIndex: 'man_name',\r\n            key: 'man_name',\r\n        },\r\n        {\r\n            title: '操作',\r\n            render: () => (\r\n                <Button type=\"primary\" danger shape=\"round\">删除</Button>\r\n            )\r\n        }\r\n    ];\r\n\r\n    const dataSource = [\r\n        { key: 1, part_name: '零件a', part_id: '123', part_amount: 5, time: '2020年12月1日', man_name: '张三' },\r\n        { key: 2, part_name: '零件b', part_id: '321', part_amount: 5, time: '2020年12月1日', man_name: '李四' },\r\n        { key: 3, part_name: '零件c', part_id: '000', part_amount: 6, time: '2020年12月1日', man_name: '王五' }\r\n    ]\r\n\r\n    const listData = [\r\n        '零件a',\r\n        '零件b',\r\n        '零件c',\r\n        '零件d'\r\n    ]\r\n\r\n    const handlePrint = () => {\r\n        // 判断是否生成条码\r\n        if (!isBarcodeExist) {\r\n            message.warning('请生成条形码！');\r\n            return true;\r\n        }\r\n\r\n        const mainCanvas = refBarContainer.current\r\n\r\n        // 将 canvas 转为图片\r\n        const mainImg = new Image()\r\n        const mainImgSrc = mainCanvas.toDataURL('image/png')\r\n        mainImg.src = mainImgSrc\r\n\r\n        // 图片加载完成后\r\n        mainImg.onload = () => {\r\n            var iframe = document.getElementById(\"print-iframe\");\r\n            if (!iframe) {\r\n                iframe = document.createElement('IFRAME');\r\n                var doc = null;\r\n                iframe.setAttribute(\"id\", \"print-iframe\");\r\n                iframe.setAttribute('style', 'position:absolute;width:0px;height:0px;left:-500px;top:-500px;');\r\n                document.body.appendChild(iframe);\r\n                doc = (iframe as HTMLIFrameElement).contentWindow.document;\r\n                //这里可以自定义样式\r\n                //doc.write(\"<LINK rel=\"stylesheet\" type=\"text/css\" href=\"css/print.css\">\");\r\n                doc.write(\"<img src='\" + mainImgSrc + \"' />\");\r\n                doc.close();\r\n                (iframe as HTMLIFrameElement).contentWindow.focus();\r\n            }\r\n\r\n            (iframe as HTMLIFrameElement).contentWindow.print();\r\n            if (navigator.userAgent.indexOf(\"MSIE\") > 0) {\r\n                document.body.removeChild(iframe);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-2) }}>生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>生产订单编辑</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">产品配置</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"产品配置\"\r\n                    bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                            <Button type=\"default\" shape=\"round\">取消</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={18}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card title=\"基本信息\" headStyle={{ fontWeight: 'bold' }} extra={ <Button type=\"primary\" shape=\"round\" onClick={create_barcode}>生成条形码</Button> }>\r\n                                    <Form\r\n                                        layout=\"inline\"\r\n                                    >\r\n                                        <Form.Item label=\"产品序列号\" name=\"device_id\">\r\n                                            <Input placeholder=\"请输入产品序列号\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"产品料号\" name=\"friend_id\">\r\n                                            <Input placeholder=\"请输入产品料号\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"产品名称\" name=\"device_name\">\r\n                                            <Input placeholder=\"请输入产品名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"开始时间\" name=\"device_start_time\">\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"计划完成时间\" name=\"device_finish_time\">\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"设备属性\"\r\n                                    headStyle={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                        <Form\r\n                                            form={form}\r\n                                            layout=\"inline\"\r\n                                        >\r\n                                            <Form.Item\r\n                                                label=\"包含岗位\"\r\n                                                name=\"have_position\"\r\n                                            >\r\n                                                <Select\r\n                                                    mode=\"multiple\"\r\n                                                    allowClear\r\n                                                    style={{ width: '500px' }}\r\n                                                    defaultValue={['1', '2', '3', '4', '5', '6']}\r\n                                                    placeholder=\"请选择此设备包含岗位\"\r\n                                                >\r\n                                                    <Select.Option value=\"1\">装配</Select.Option>\r\n                                                    <Select.Option value=\"2\">调试</Select.Option>\r\n                                                    <Select.Option value=\"3\">质检</Select.Option>\r\n                                                    <Select.Option value=\"4\">仓库</Select.Option>\r\n                                                    <Select.Option value=\"5\">安装</Select.Option>\r\n                                                    <Select.Option value=\"6\">运维</Select.Option>\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                        <Card\r\n                                            title=\"设备零部件清单\"\r\n                                            bodyStyle={{ padding: 0 }}\r\n                                            bordered={false}\r\n                                            headStyle={{ padding: 0, fontWeight: 'bold' }}\r\n                                        >\r\n                                            <Table columns={columns} dataSource={dataSource} bordered />\r\n                                        </Card>\r\n                                    </Space>\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"条码生成区\"\r\n                                    extra={<Tooltip title=\"打印条形码\" color=\"#40a9ff\"><Button onClick={handlePrint} icon={<PrinterTwoTone />} shape=\"circle\"></Button></Tooltip>}\r\n                                    bodyStyle={{ minHeight: '150px', padding: 0, overflow: 'hidden', position: 'relative' }}\r\n                                >\r\n                                    <div className=\"bar-area\" ref={mainRef}>\r\n                                        <canvas ref={refBarContainer} className=\"barcode-container\" />\r\n                                    </div>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"零部件列表\"\r\n                                    bodyStyle={{ padding: 0 }}\r\n                                >\r\n                                    <List\r\n                                        size=\"small\"\r\n                                        dataSource={listData}\r\n                                        renderItem={item => (\r\n                                            <List.Item actions={[<Button type=\"ghost\" shape=\"circle\" icon={<PlusOutlined />}></Button>]}>\r\n                                                {item}\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\api\\login.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts",[],{"ruleId":"123","severity":1,"message":"124","line":4,"column":47,"nodeType":"125","messageId":"126","endLine":4,"endColumn":55},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"123","severity":1,"message":"131","line":9,"column":19,"nodeType":"125","messageId":"126","endLine":9,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":31,"column":32,"nodeType":"134","messageId":"135","endLine":31,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":31,"column":46,"nodeType":"134","messageId":"135","endLine":31,"endColumn":47},{"ruleId":"136","severity":1,"message":"137","line":41,"column":60,"nodeType":"138","endLine":41,"endColumn":63},{"ruleId":"123","severity":1,"message":"139","line":8,"column":5,"nodeType":"125","messageId":"126","endLine":8,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":29,"column":60,"nodeType":"138","endLine":29,"endColumn":63},{"ruleId":"132","severity":1,"message":"133","line":39,"column":32,"nodeType":"134","messageId":"135","endLine":39,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":39,"column":46,"nodeType":"134","messageId":"135","endLine":39,"endColumn":47},{"ruleId":"123","severity":1,"message":"140","line":13,"column":5,"nodeType":"125","messageId":"126","endLine":13,"endColumn":10},{"ruleId":"141","severity":1,"message":"142","line":47,"column":8,"nodeType":"143","endLine":47,"endColumn":10,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":53,"column":86,"nodeType":"147","messageId":"148","endLine":53,"endColumn":105,"fix":"149"},{"ruleId":"145","severity":1,"message":"150","line":160,"column":41,"nodeType":"147","messageId":"148","endLine":160,"endColumn":67,"fix":"151"},{"ruleId":"145","severity":1,"message":"152","line":161,"column":41,"nodeType":"147","messageId":"148","endLine":161,"endColumn":68,"fix":"153"},{"ruleId":"123","severity":1,"message":"154","line":24,"column":10,"nodeType":"125","messageId":"126","endLine":24,"endColumn":18},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'setIsLogin' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InputNumber' is defined but never used.","'Alert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["157"],"no-useless-computed-key","Unnecessarily computed property ['remember'] found.","Property","unnecessarilyComputedProperty",{"range":"158","text":"159"},"Unnecessarily computed property ['item_is_required'] found.",{"range":"160","text":"161"},"Unnecessarily computed property ['item_is_readonly'] found.",{"range":"162","text":"163"},"'isIFrame' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},[1721,1733],"'remember'",[6162,6182],"'item_is_required'",[6231,6251],"'item_is_readonly'","Update the dependencies array to be: [props.history]",{"range":"166","text":"167"},[1476,1478],"[props.history]"]