[{"D:\\fuzzy work\\mes_web\\src\\index.tsx":"1","D:\\fuzzy work\\mes_web\\src\\App.tsx":"2","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts":"3","D:\\fuzzy work\\mes_web\\src\\components\\index.ts":"4","D:\\fuzzy work\\mes_web\\src\\tools\\index.ts":"5","D:\\fuzzy work\\mes_web\\src\\views\\index.ts":"6","D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx":"7","D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx":"8","D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx":"9","D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx":"10","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx":"11","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx":"12","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx":"13","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx":"14","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx":"15","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx":"16","D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx":"17","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts":"18","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts":"19","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx":"20","D:\\fuzzy work\\mes_web\\src\\api\\login.ts":"21","D:\\fuzzy work\\mes_web\\src\\api\\index.ts":"22","D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts":"23","D:\\fuzzy work\\mes_web\\src\\api\\staff.ts":"24","D:\\fuzzy work\\mes_web\\src\\api\\product.ts":"25","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\reducer.ts":"26","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\typings.ts":"27","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\reducer.ts":"28","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\typings.ts":"29","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\index.tsx":"30","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\typings.ts":"31","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\reducer.ts":"32","D:\\fuzzy work\\mes_web\\src\\api\\integratedconfig.ts":"33","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\reducer.ts":"34","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\typings.ts":"35","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx":"36","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\index.tsx":"37","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\reducer.ts":"38","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\typings.ts":"39","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\reducer.ts":"40","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\typings.ts":"41","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\processConfigurationAdd\\index.tsx":"42","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\index.tsx":"43","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\checkForm_detail\\index.tsx":"44"},{"size":786,"mtime":1609119180528,"results":"45","hashOfConfig":"46"},{"size":1567,"mtime":1614586645986,"results":"47","hashOfConfig":"46"},{"size":3346,"mtime":1615515624059,"results":"48","hashOfConfig":"46"},{"size":146,"mtime":1609119180528,"results":"49","hashOfConfig":"46"},{"size":2579,"mtime":1614934066709,"results":"50","hashOfConfig":"46"},{"size":1814,"mtime":1615514754199,"results":"51","hashOfConfig":"46"},{"size":4959,"mtime":1615449770772,"results":"52","hashOfConfig":"46"},{"size":3109,"mtime":1615256701244,"results":"53","hashOfConfig":"46"},{"size":258,"mtime":1609119180520,"results":"54","hashOfConfig":"46"},{"size":559,"mtime":1609119180538,"results":"55","hashOfConfig":"46"},{"size":7212,"mtime":1614846445822,"results":"56","hashOfConfig":"46"},{"size":7178,"mtime":1615189633674,"results":"57","hashOfConfig":"46"},{"size":6819,"mtime":1614846479259,"results":"58","hashOfConfig":"46"},{"size":7656,"mtime":1614741967029,"results":"59","hashOfConfig":"46"},{"size":3530,"mtime":1609119180538,"results":"60","hashOfConfig":"46"},{"size":3678,"mtime":1615515769811,"results":"61","hashOfConfig":"46"},{"size":2821,"mtime":1614069972652,"results":"62","hashOfConfig":"46"},{"size":377,"mtime":1613613143952,"results":"63","hashOfConfig":"46"},{"size":636,"mtime":1614737236043,"results":"64","hashOfConfig":"46"},{"size":8783,"mtime":1615429863998,"results":"65","hashOfConfig":"46"},{"size":192,"mtime":1614563427118,"results":"66","hashOfConfig":"46"},{"size":1109,"mtime":1614736131288,"results":"67","hashOfConfig":"46"},{"size":346,"mtime":1614060183221,"results":"68","hashOfConfig":"46"},{"size":135,"mtime":1614735906369,"results":"69","hashOfConfig":"46"},{"size":741,"mtime":1614913350043,"results":"70","hashOfConfig":"46"},{"size":333,"mtime":1614757431265,"results":"71","hashOfConfig":"46"},{"size":173,"mtime":1614757207204,"results":"72","hashOfConfig":"46"},{"size":336,"mtime":1614845652335,"results":"73","hashOfConfig":"46"},{"size":67,"mtime":1614845617238,"results":"74","hashOfConfig":"46"},{"size":5716,"mtime":1615190956015,"results":"75","hashOfConfig":"46"},{"size":70,"mtime":1614934240860,"results":"76","hashOfConfig":"46"},{"size":324,"mtime":1614935750250,"results":"77","hashOfConfig":"46"},{"size":409,"mtime":1615339914895,"results":"78","hashOfConfig":"46"},{"size":324,"mtime":1615172947291,"results":"79","hashOfConfig":"46"},{"size":70,"mtime":1615172956113,"results":"80","hashOfConfig":"46"},{"size":4150,"mtime":1615516005786,"results":"81","hashOfConfig":"46"},{"size":12746,"mtime":1615449082442,"results":"82","hashOfConfig":"46"},{"size":881,"mtime":1615273859455,"results":"83","hashOfConfig":"46"},{"size":209,"mtime":1615270995980,"results":"84","hashOfConfig":"46"},{"size":317,"mtime":1615342239615,"results":"85","hashOfConfig":"46"},{"size":70,"mtime":1615341946273,"results":"86","hashOfConfig":"46"},{"size":3598,"mtime":1615429678236,"results":"87","hashOfConfig":"46"},{"size":4898,"mtime":1615527753837,"results":"88","hashOfConfig":"46"},{"size":4279,"mtime":1615530350025,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"12tl25p",{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"93"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"93"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"175","usedDeprecatedRules":"93"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"93"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fuzzy work\\mes_web\\src\\index.tsx",["191"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { mainRoutes } from './routes'\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            mainRoutes.map(route => (\r\n              <Route path={route.pathName} component={route.component} key={route.pathName} />\r\n            ))\r\n          }\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  </ConfigProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n",["192","193"],"D:\\fuzzy work\\mes_web\\src\\App.tsx",["194"],"import './App.less'\r\nimport { Frame, Loading } from './components';\r\nimport { Suspense, useState, FC, ReactElement } from 'react'\r\nimport { adminRoutes } from './routes'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { insertUserId } from './tools'\r\n\r\nconst App: FC = (): ReactElement => {\r\n  const [isLogin, setIsLogin] = useState<boolean>(localStorage.getItem('key') ? true : false)\r\n\r\n  return (\r\n    isLogin\r\n      ?\r\n      <Frame>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => (\r\n                route.isSubMenu ?\r\n                  route.subMenu.map(subRoute => (\r\n                    <Route\r\n                      path={subRoute.pathName}\r\n                      key={subRoute.pathName}\r\n                      component={subRoute.component}\r\n                      exact={subRoute.exact}\r\n                    />\r\n                  ))\r\n                  :\r\n                  <Route\r\n                    path={route.pathName}\r\n                    key={route.pathName}\r\n                    component={route.component}\r\n                    exact={route.exact}\r\n                  />\r\n              ))\r\n            }\r\n            <Redirect\r\n              // you need insert userid here\r\n              to={insertUserId(adminRoutes[0].pathName, 'my-userid')}\r\n              from=\"/\"\r\n              exact />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Frame>\r\n      :\r\n      <Redirect to=\"/login\" />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\index.ts",["195"],"// insert userID\r\n// parameter: [需要修改的path， 需要插入的userid]\r\n// attention: 只对routeArr第二位做修改\r\nexport const insertUserId = (prevPath: string, userId: string): string => {\r\n    let routeArr: Array<string> = prevPath.split('/')\r\n    routeArr.splice(1, 1, userId)\r\n    return routeArr.join('/')\r\n}\r\n\r\nexport const cutURLForSelectedKeys = (url: string): string => {\r\n    let routeArr: Array<string> = url.split('/')\r\n    routeArr.length = 3;\r\n    return routeArr.join('/')\r\n}\r\n\r\nexport const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => {\r\n    return input !== null && input.tagName === 'IFRAME';\r\n}\r\n\r\nexport const getSearchObj = (str: string): { [key: string]: any } => {\r\n    if (!str) return\r\n    let target = {}\r\n    let n = str.split('?')[1].split('&')\r\n    n.map((item) => {\r\n        let m = item.split('=')\r\n        target[m[0]] = m[1]\r\n    })\r\n    return target\r\n}\r\n\r\nexport const getDataSource = (json) => {\r\n    let target = []\r\n    json.forEach((item, index) => {\r\n        target.push({\r\n            key: index,\r\n            bom_a: item[\"母件编码 *(cpspcode)H\"] || \"\",\r\n            bom_b: item[\"母件名称 *(cinvname)H\"] || \"\",\r\n            bom_c: item[\"规格型号(cinvstd)H\"] || \"\",\r\n            bom_d: item[\"是否展开(bexpand)H\"] || \"\",\r\n            bom_e: item[\"部门名称(cdepname)H\"] || \"\",\r\n            bom_f: item[\"部门编码(cdepcode)H\"] || \"\",\r\n            bom_g: item[\"默认成本BOM(bmrcbbom)H\"] || \"\",\r\n            bom_h: item[\"版本号(csocode)H\"] || \"\",\r\n            bom_i: item[\"备注(cmemo)H\"] || \"\",\r\n            bom_j: item[\"子件编码(cpscode)\"] || \"\",\r\n            bom_k: item[\"子件名称(cinvname)\"] || \"\",\r\n            bom_l: item[\"规格型号(cinvstd)\"] || \"\",\r\n            bom_m: item[\"版本号(csocode)\"] || \"\",\r\n            bom_n: item[\"主计量(ccomunitname)\"] || \"\",\r\n            bom_o: item[\"基本用量分子(ipsquantity)\"] || \"\",\r\n            bom_p: item[\"基本用量分母(tdqtyd)\"] || \"\",\r\n            bom_q: item[\"标准单价(fbzdj)\"] || \"\",\r\n            bom_r: item[\"标准物料成本(fbzwlcb)\"] || \"\",\r\n            bom_s: item[\"损耗率%(iwasterate)\"] || \"\",\r\n            bom_t: item[\"存放仓库(cwhname)\"] || \"\",\r\n            bom_u: item[\"库管员(cpersonname)\"] || \"\",\r\n            bom_v: item[\"用料车间(usedept)\"] || \"\",\r\n            bom_w: item[\"物料类型(wiptype)\"] || \"\",\r\n            bom_x: item[\"替代标示(replaceflag)\"] || \"\",\r\n            bom_y: item[\"图片(ginvpicture)\"] || \"\",\r\n        })\r\n    })\r\n\r\n    return target\r\n}","D:\\fuzzy work\\mes_web\\src\\views\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx",["196","197","198","199","200"],"import React, { FC, ReactElement, useEffect, useReducer } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb,\r\n    Space\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order.less'\r\nimport { ISearch } from './typings'\r\nimport moment from 'moment';\r\nimport { getProductOrdersList } from '../../api/product'\r\nimport { productOrderListReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst ProductionOrders: FC = (props: any): ReactElement => {\r\n    const [form] = Form.useForm()\r\n    const onFinish = (values: ISearch) => {\r\n        let { order_num, order_response, order_time } = values;\r\n        let startTime = order_time[0].toJSON()\r\n        let endTime = order_time[1].toJSON()\r\n        getProductOrdersList({\r\n            startTime: startTime || \"\",\r\n            endTime: endTime || \"\",\r\n            orderId: order_num || \"\",\r\n            chargeUserId: order_response || \"\"\r\n        }).then((res: any) => {\r\n            if (res.code === 200) {\r\n                let n = res.data.map(item => ({\r\n                    ...item,\r\n                    order_amount: item.Devices.length,\r\n                    key: item.Id,\r\n                    isUrgent: item.isUrgent ? '是' : '否'\r\n                }))\r\n                dispatch({\r\n                    type: ACTION_TYPE.SET_ORDER_LIST,\r\n                    payload: n\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(productOrderListReducer, [])\r\n\r\n    const add_new_order = () => {\r\n        // you need insert userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order')\r\n    }\r\n\r\n    const editRender = (record) => {\r\n        const handleClickEdit = () => {\r\n            props.history.push('/' + 'my-userid' + '/po/edit_order/?productId=' + record.ProductNo)\r\n        }\r\n        return <a onClick={handleClickEdit}>编辑</a>\r\n    }\r\n\r\n    const columns = [\r\n        { title: '生产订单编号', dataIndex: 'ProductNo', key: 'order_id' },\r\n        { title: '产品数量', dataIndex: 'order_amount', key: 'order_amount' },\r\n        { title: '开单时间', dataIndex: 'CreateTime', key: 'order_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'PlanTime', key: 'order_finish_time' },\r\n        { title: '是否加急', dataIndex: 'isUrgent', key: 'order_in_need' },\r\n        { title: '订单负责人', dataIndex: 'ChargeUser', key: 'order_response_man' },\r\n        { title: '操作', key: 'order_action', render: editRender },\r\n    ]\r\n\r\n    const expandedRowRender = (record) => {\r\n        const columns = [\r\n            { title: '产品序列号', dataIndex: 'SerialNo', key: 'device_id' },\r\n            { title: 'TerminalID', dataIndex: 'TerminalId', key: 'device_terminalId' },\r\n            { title: '产品料号', dataIndex: 'ProductID', key: 'device_type' },\r\n            { title: '产品名称', dataIndex: 'Name', key: 'device_name' },\r\n            { title: '开始时间', dataIndex: 'CreateTime', key: 'device_start_time' },\r\n            { title: '计划完成时间', dataIndex: 'PlanTime', key: 'device_end_time' },\r\n        ]\r\n\r\n        let data = record.Devices.map(item => ({\r\n            ...item,\r\n            key: item.SerialNo\r\n        }))\r\n\r\n        return <Table className=\"sub-table\" bordered={true} columns={columns} dataSource={data} pagination={false} />;\r\n    }\r\n\r\n    useEffect(() => {\r\n        getProductOrdersList({\r\n            startTime: '',\r\n            endTime: '',\r\n            orderId: '',\r\n            chargeUserId: ''\r\n        }).then((res: any) => {\r\n            if (res.code === 200) {\r\n                let n = res.data.map(item => ({\r\n                    ...item,\r\n                    order_amount: item.Devices.length,\r\n                    key: item.Id,\r\n                    isUrgent: item.isUrgent ? '是' : '否'\r\n                }))\r\n                dispatch({\r\n                    type: ACTION_TYPE.SET_ORDER_LIST,\r\n                    payload: n\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"生产订单列表\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Button icon={<PlusOutlined />} shape=\"round\" type=\"primary\" onClick={add_new_order}>添加新订单</Button>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"生产订单编号\" name=\"order_num\">\r\n                            <Input placeholder=\"请输入生产订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单时间\" name=\"order_time\">\r\n                            <RangePicker\r\n                                ranges={{\r\n                                    '今天': [moment(), moment()],\r\n                                    '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单责任人\" name=\"order_response\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"1\">张三</Select.Option>\r\n                                <Select.Option value=\"2\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table\r\n                        bordered={true}\r\n                        columns={columns}\r\n                        expandable={{ expandedRowRender }}\r\n                        dataSource={state}\r\n                        rowClassName={(record, index) => {\r\n                            let className = 'light-row';\r\n                            if (index % 2 === 1) className = 'dark-row';\r\n                            return className;\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductionOrders;","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx",["201","202","203"],"import React, { useEffect, useReducer, useState } from 'react'\r\nimport './part_configuration.less'\r\nimport {\r\n    Form,\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Select,\r\n    Table,\r\n    Input,\r\n    Divider,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport {\r\n    FolderOpenOutlined\r\n} from '@ant-design/icons'\r\nimport { getBomList } from '../../../api/integratedconfig'\r\nimport { dataSourceReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function DeviceConfiguration(props) {\r\n    const [form] = Form.useForm()\r\n    const [sProjectName, setSProjectName] = useState<string>(\"\")\r\n    const [sCpspcode, setSCpspcode] = useState<string>(\"\")\r\n    const [state, dispatch] = useReducer(dataSourceReducer, [])\r\n\r\n    const columns = [\r\n        { title: '方案名称', dataIndex: 'customizename', key: 'customizename' },\r\n        { title: '母件编码', dataIndex: 'cpspcodeH', key: 'cpspcodeH' },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button type=\"primary\" shape=\"round\">编辑</Button>\r\n                    <Button type=\"primary\" shape=\"round\" danger>删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    const expandedRowRender = (e) => {\r\n        console.log(e)\r\n        const columns = [\r\n            // { title: '母件编码 *(cpspcode)H', dataIndex: 'cpspcodeH', key: 'cpspcodeH', width: 100 },\r\n            // { title: '母件名称 *(cinvname)H', dataIndex: 'cinvnameH', key: 'cinvnameH', width: 100 },\r\n            // { title: '规格型号(cinvstd)H', dataIndex: 'cinvstdH', key: 'cinvstdH', width: 100 },\r\n            // { title: '是否展开(bexpand)H', dataIndex: 'bexpandH', key: 'bexpandH', width: 100 },\r\n            // { title: '部门名称(cdepname)H', dataIndex: 'cdepnameH', key: 'cdepnameH', width: 100 },\r\n            // { title: '部门编码(cdepcode)H', dataIndex: 'cdepcodeH', key: 'cdepcodeH', width: 100 },\r\n            // { title: '默认成本BOM(bmrcbbom)H', dataIndex: 'bmrcbbomH', key: 'bmrcbbomH', width: 100 },\r\n            // { title: '版本号(csocode)H', dataIndex: 'csocodeH', key: 'csocodeH', width: 100 },\r\n            // { title: '备注(cmemo)H', dataIndex: 'cmemoH', key: 'cmemoH', width: 100 },\r\n            { title: '子件编码(cpscode)', dataIndex: 'cpscode', key: 'cpscode', width: 100 },\r\n            { title: '子件名称(cinvname)', dataIndex: 'cinvname', key: 'cinvname', width: 100 },\r\n            { title: '规格型号(cinvstd)', dataIndex: 'cinvstd', key: 'cinvstd', width: 150 },\r\n            // { title: '版本号(csocode)', dataIndex: 'csocode', key: 'csocode', width: 100 },\r\n            { title: '主计量(ccomunitname)', dataIndex: 'ccomunitname', key: 'ccomunitname', width: 100 },\r\n            { title: '基本用量分子(ipsquantity)', dataIndex: 'ipsquantity', key: 'ipsquantity', width: 200 },\r\n            { title: '基本用量分母(tdqtyd)', dataIndex: 'tdqtyd', key: 'tdqtyd', width: 200 },\r\n            // { title: '标准单价(fbzdj)', dataIndex: 'fbzdj', key: 'fbzdj', width: 150 },\r\n            // { title: '标准物料成本(fbzwlcb)', dataIndex: 'fbzwlcb', key: 'fbzwlcb', width: 200 },\r\n            // { title: '损耗率%(iwasterate)', dataIndex: 'iwasterate', key: 'iwasterate', width: 100 },\r\n            // { title: '存放仓库(cwhname)', dataIndex: 'cwhname', key: 'cwhname', width: 100 },\r\n            // { title: '库管员(cpersonname)', dataIndex: 'cpersonname', key: 'cpersonname', width: 100 },\r\n            // { title: '用料车间(usedept)', dataIndex: 'usedept', key: 'usedept', width: 100 },\r\n            // { title: '物料类型(wiptype)', dataIndex: 'wiptype', key: 'wiptype', width: 100 },\r\n            // { title: '替代标示(replaceflag)', dataIndex: 'replaceflag', key: 'replaceflag', width: 100 },\r\n            // { title: '图片(ginvpicture)', dataIndex: 'ginvpicture', key: 'ginvpicture', width: 100 },\r\n        ]\r\n\r\n        return <Table bordered={true} columns={columns} dataSource={[e]} pagination={false} />;\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        props.history.push('/' + 'my-userid' + '/dc/add')\r\n    }\r\n\r\n    const handleSearch = (values) => {\r\n        let { bom_name, device_type } = values;\r\n        if (bom_name) setSProjectName(bom_name)\r\n        if (device_type) setSCpspcode(device_type)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('effct')\r\n        getBomList({ projectName: sProjectName, cpspcode: sCpspcode }).then((res: any) => {\r\n            console.log(res)\r\n            if (res.code === 200) {\r\n                let payload = res.data.map((item, index) => ({\r\n                    ...item,\r\n                    key: index\r\n                }))\r\n                dispatch({ type: ACTION_TYPE.SET_DATA_SOURCE, payload })\r\n            }\r\n        })\r\n    }, [sProjectName, sCpspcode])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">零件 BOM 列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"零件 BOM 列表\"\r\n                    extra={\r\n                        <Space size={16}>\r\n                            {/* <Button shape=\"round\" type=\"default\" icon={<FolderOpenOutlined />}>导入方案</Button> */}\r\n                            <Button shape=\"round\" type=\"primary\" onClick={handleAdd}>添加 BOM</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form form={form} layout=\"inline\" onFinish={handleSearch}>\r\n                        <Form.Item label=\"设备类型\" name=\"device_type\" className=\"form-item\">\r\n                            <Select style={{ width: '400px' }}>\r\n                                <Select.Option value=\"02020103\">智能防盗型保护接地箱（直立式）无监测(02020103)</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"方案名称\" name=\"bom_name\" className=\"form-item\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        headStyle={{ fontWeight: 'bold', padding: 0 }}\r\n                        bodyStyle={{ padding: 0 }}\r\n                        bordered={false}\r\n                    >\r\n                        <Table bordered columns={columns} dataSource={state} expandable={{ expandedRowRender }} />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx",["204","205","206","207","208","209"],"import React, { useEffect, useReducer } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    DatePicker,\r\n    Switch,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order_add.less'\r\nimport { addProductOrder, getDeviceListByOrderId } from '../../../api/product'\r\nimport { getSearchObj } from '../../../tools/index'\r\nimport { productDeviceListReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function ProductionOrdersAdd(props: any) {\r\n    const [form] = Form.useForm()\r\n    const [state, dispatch] = useReducer(productDeviceListReducer, [])\r\n\r\n    const columns = [\r\n        { title: '产品序列号', dataIndex: 'SerialNo', key: 'device_id' },\r\n        { title: 'TerminalID', dataIndex: 'TerminalId', key: 'device_terminalId' },\r\n        { title: '产品料号', dataIndex: 'ProductID', key: 'device_type' },\r\n        { title: '产品名称', dataIndex: 'Name', key: 'device_name' },\r\n        { title: '开始时间', dataIndex: 'CreateTime', key: 'device_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'PlanTime', key: 'device_end_time' },\r\n        { title: '操作', key: 'order_action', render: () => (<a>编辑</a>) },\r\n    ]\r\n\r\n    const data = [\r\n        { key: 0, device_id: '123456', device_type: '02020103', device_name: '接地箱1', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' },\r\n        { key: 1, device_id: '123456', device_type: '02020103', device_name: '接地箱2', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' }\r\n    ]\r\n\r\n    const add_new_work = () => {\r\n        // you need add userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order/edit_work')\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        let {\r\n            order_finish_time,\r\n            order_id,\r\n            order_in_need,\r\n            order_response_man,\r\n            order_start_time\r\n        } = form.getFieldsValue()\r\n        if (!order_finish_time || !order_id || !order_response_man || !order_start_time) {\r\n            return message.warning('信息未填写完整！')\r\n        }\r\n        addProductOrder({\r\n            ProductNo: order_id || '',\r\n            PlanTime: order_finish_time || '',\r\n            CreateTime: order_start_time || '',\r\n            ChargeUserId: order_response_man || '',\r\n            isUrgent: !order_in_need,\r\n        }).then((res: any) => {\r\n            if (res.code === 200) {\r\n                message.success(res.msg);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.location.search) {\r\n            let { productId } = getSearchObj(props.location.search)\r\n            getDeviceListByOrderId(productId).then((res: any) => {\r\n                let payload = res.data.map(item => ({\r\n                    ...item,\r\n                    key: item.SerialNo\r\n                }))\r\n                dispatch({ type: ACTION_TYPE.SET_DEVICE_LIST, payload })\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">生产订单编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"订单配置\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\" onClick={handleAdd}>提交保存</Button>\r\n                            <Button type=\"default\" shape=\"round\">取消</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        layout=\"inline\"\r\n                        initialValues={{ order_in_need: true }}\r\n                    >\r\n                        <Form.Item label=\"生产订单编号\" name=\"order_id\">\r\n                            <Input placeholder=\"请输入生产订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"开单时间\" name=\"order_start_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计划完成时间\" name=\"order_finish_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否加急\" name=\"order_in_need\" valuePropName=\"checked\">\r\n                            <Switch checkedChildren=\"正常\" unCheckedChildren=\"加急\" className=\"order-form-switch\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单负责人\" name=\"order_response_man\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"zhangsan\">张三</Select.Option>\r\n                                <Select.Option value=\"lisi\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        title=\"生产订单包含产品\"\r\n                        headStyle={{ fontWeight: 'bold' }}\r\n                        bodyStyle={{ padding: 0 }}\r\n                        extra={<Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={add_new_work}>添加新产品</Button>}\r\n                    >\r\n                        <Table\r\n                            bordered={true}\r\n                            columns={columns}\r\n                            dataSource={state}\r\n                            rowClassName={(record, index) => {\r\n                                let className = 'light-row';\r\n                                if (index % 2 === 1) className = 'dark-row';\r\n                                return className;\r\n                            }}\r\n                        />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx",["210","211"],"import React, { FC, ReactElement, useReducer, useEffect, useState } from 'react'\r\nimport {\r\n    Tree,\r\n    Card,\r\n    Tooltip,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    Select,\r\n    Divider,\r\n    Empty,\r\n    Space,\r\n    Alert\r\n} from 'antd'\r\nimport { EditOutlined, UserOutlined } from '@ant-design/icons';\r\nimport './staff_management.less';\r\nimport { ACTION_TYPE, ITree, ITreeDataNode, ITreeNode } from './typings';\r\nimport { treeReducer } from './reducer';\r\nimport { getUsersList } from '../../api/staff'\r\n\r\nconst initialState: ITree = {\r\n    treeData: []\r\n};\r\n\r\nconst StaffManagement: FC = (): ReactElement => {\r\n    const [form] = Form.useForm()\r\n    const [isEditMode, setIsEditMode] = useState<boolean>(false)\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n\r\n    const handleChange = () => {\r\n        console.log(form.getFieldsValue())\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(treeReducer, initialState)\r\n\r\n    const onCheck = (checkedKeys: React.Key[]) => {\r\n        console.log('onCheck', checkedKeys);\r\n    };\r\n\r\n    const toggleIsEditMode = () => {\r\n        setIsEditMode(!isEditMode)\r\n    }\r\n\r\n    // 处理树结构返回数据\r\n    const handleTreeData = (treeData: ITreeDataNode[]): ITreeNode[] => {\r\n        let result = []\r\n        treeData.forEach((item1) => {\r\n            let children = []\r\n            item1.Users.forEach((item2) => {\r\n                children.push({\r\n                    title: item2.Name,\r\n                    key: 'u_' + item2.Id,\r\n                    id: item2.Id,\r\n                    icon: <UserOutlined />\r\n                })\r\n            })\r\n            result.push({\r\n                title: item1.Department,\r\n                key: 'd_' + item1.DepartId,\r\n                children: children\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = []\r\n        getUsersList().then((res: any) => {\r\n            if (res.code === 200) {\r\n                let result = handleTreeData(res.data)\r\n                dispatch({\r\n                    type: ACTION_TYPE.GET_TREE,\r\n                    payload: result\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"staff-manage-page\">\r\n            <div className=\"tree-slider\">\r\n                <Card\r\n                    title=\"员工列表\"\r\n                    extra={<Tooltip title=\"编辑模式\" color=\"#40a9ff\"><Button icon={<EditOutlined />} onClick={toggleIsEditMode} type=\"primary\" shape=\"round\" size=\"small\">{isEditMode ? '退出编辑' : '编辑模式'}</Button></Tooltip>}\r\n                    headStyle={{ padding: '0 20px' }}\r\n                    bodyStyle={{ padding: '0' }}\r\n                >\r\n                    <div className=\"search-box\">\r\n                        <Input placeholder=\"请输入员工姓名或工号\" />\r\n                    </div>\r\n                    {\r\n                        isEditMode ?\r\n                            <div className=\"edit-box\">\r\n                                <Space>\r\n                                    <Button size=\"small\" type=\"primary\">添加</Button>\r\n                                    <Button size=\"small\" type=\"primary\" danger>删除</Button>\r\n                                </Space>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    <div className=\"tree-box\">\r\n                        {\r\n                            state.treeData.length > 0\r\n                                ?\r\n                                <Tree\r\n                                    checkable={isEditMode}\r\n                                    showLine={{ showLeafIcon: false }}\r\n                                    showIcon={!isEditMode}\r\n                                    defaultExpandAll={true}\r\n                                    onSelect={onSelect}\r\n                                    treeData={state.treeData}\r\n                                    onCheck={onCheck}\r\n                                />\r\n                                :\r\n                                <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <div className=\"staff-info\">\r\n                <Card\r\n                    title=\"员工信息\"\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleChange}>保存修改</Button>}\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"员工姓名\"\r\n                            name=\"staff-name\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入姓名\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"员工岗位\"\r\n                            name=\"staff-station\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '250px' }}\r\n                                placeholder=\"请选择岗位\"\r\n                            >\r\n                                <Select.Option value=\"1\">岗位1</Select.Option>\r\n                                <Select.Option value=\"2\">岗位2</Select.Option>\r\n                                <Select.Option value=\"3\">岗位3</Select.Option>\r\n                                <Select.Option value=\"4\">岗位4</Select.Option>\r\n                                <Select.Option value=\"5\">岗位5</Select.Option>\r\n                                <Select.Option value=\"6\">岗位6</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">可选分配账号</Divider>\r\n                        <Form.Item\r\n                            label=\"员工账号\"\r\n                            name=\"staff-account\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入账号\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"账号密码\"\r\n                            name=\"staff-password\"\r\n                        >\r\n                            <Input.Password style={{ width: '200px' }} placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">权限分配</Divider>\r\n                        <Form.Item\r\n                            label=\"权限选择\"\r\n                            name=\"staff-authority\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '500px' }}\r\n                                placeholder=\"请选择此角色拥有权限\"\r\n                            >\r\n                                <Select.Option value=\"1\">权限1</Select.Option>\r\n                                <Select.Option value=\"2\">权限2</Select.Option>\r\n                                <Select.Option value=\"3\">权限3</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StaffManagement;","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx",["212","213"],"D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx",["214","215"],"import React, { useEffect } from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    message\r\n} from 'antd'\r\nimport { encryptAES, decryptAES } from '../../tools/aes'\r\nimport './login.less'\r\nimport { login } from '../../api/login'\r\n\r\ninterface UserInfo {\r\n    account: string | undefined;\r\n    password: string | undefined;\r\n    remember: boolean;\r\n}\r\n\r\nexport default function Login(props: any) {\r\n    const handleLogin = (values: UserInfo) => {\r\n        let { account, password, remember } = values;\r\n        if (remember) {\r\n            localStorage.setItem('user', encryptAES(JSON.stringify({ ac: account, pwd: password })))\r\n        }\r\n        login({ ac: encryptAES(account), pwd: encryptAES(password) }).then((res: any) => {\r\n            if (res.bRes) {\r\n                localStorage.setItem('key', encryptAES(res.Ticket))\r\n                props.history.push('/')\r\n            } else {\r\n                message.error('login error!');\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('user')) {\r\n            const { ac, pwd } = decryptAES(localStorage.getItem('user'))\r\n            login({ ac, pwd }).then((res: any) => {\r\n                if (res.bRes) {\r\n                    localStorage.setItem('key', encryptAES(res.Ticket))\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error('login error!');\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <h1 className=\"login-title\">新图维追溯管理系统</h1>\r\n                <Form className=\"login-form\" onFinish={handleLogin} initialValues={{ ['remember']: false }}>\r\n                    <Form.Item name=\"account\" style={{ paddingBottom: '0px' }}>\r\n                        <Input\r\n                            addonBefore=\"账号\"\r\n                            allowClear\r\n                            placeholder=\"请输入账号\"\r\n                            className=\"first-input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\" style={{ paddingTop: '0px' }}>\r\n                        <Input.Password\r\n                            addonBefore=\"密码\"\r\n                            placeholder=\"请输入密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>记住我</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button block type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx",["216","217","218","219","220","221"],"import React, { ReactNode, useRef, useState, useCallback } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Form,\r\n    Select,\r\n    Space,\r\n    Tooltip,\r\n    Input,\r\n    Table,\r\n    List,\r\n    Breadcrumb,\r\n    message,\r\n    DatePicker,\r\n    Divider\r\n} from 'antd'\r\nimport {\r\n    PrinterTwoTone,\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order_add_work.less'\r\nimport JsBarcode from 'jsbarcode'\r\nimport { isIFrame } from '../../../tools'\r\n\r\nconst _barcode_options = {\r\n    format: \"CODE128\",//选择要使用的条形码类型\r\n    width: 3,//设置条之间的宽度\r\n    height: 100,//高度\r\n    displayValue: true,//是否在条形码下方显示文字\r\n    fontOptions: 'bold',// 设置字体加粗\r\n    textAlign: \"middle\",//设置文本的水平对齐方式\r\n    textPosition: \"bottom\",//设置文本的垂直位置\r\n    textMargin: 5,//设置条形码和文本之间的间距\r\n    fontSize: 22,//设置文本的大小\r\n    background: \"#eee\",//设置条形码的背景\r\n    margin: 25//设置条形码周围的空白边距\r\n}\r\n\r\nexport default function ProductionOrdersAddWork(props) {\r\n    const [form] = Form.useForm()\r\n    const refBarContainer = useRef<HTMLCanvasElement>(null)\r\n    const mainRef = useRef<HTMLDivElement>(null)\r\n    const [isBarcodeExist, setIsBarcodeExist] = useState<boolean>(false)\r\n\r\n    const create_barcode = (values) => {\r\n        JsBarcode(refBarContainer.current, '020201112220A001', { ..._barcode_options, text: '02020111 2220A001' })\r\n        setIsBarcodeExist(true)\r\n    }\r\n\r\n    const handlePrint = () => {\r\n        // 判断是否生成条码\r\n        if (!isBarcodeExist) {\r\n            message.warning('请生成条形码！');\r\n            return true;\r\n        }\r\n\r\n        const mainCanvas = refBarContainer.current\r\n\r\n        // 将 canvas 转为图片\r\n        const mainImg = new Image()\r\n        const mainImgSrc = mainCanvas.toDataURL('image/png')\r\n        mainImg.src = mainImgSrc\r\n\r\n        // 图片加载完成后\r\n        mainImg.onload = () => {\r\n            var iframe = document.getElementById(\"print-iframe\");\r\n            if (!iframe) {\r\n                iframe = document.createElement('IFRAME');\r\n                var doc = null;\r\n                iframe.setAttribute(\"id\", \"print-iframe\");\r\n                iframe.setAttribute('style', 'position:absolute;width:0px;height:0px;left:-500px;top:-500px;');\r\n                document.body.appendChild(iframe);\r\n                doc = (iframe as HTMLIFrameElement).contentWindow.document;\r\n                //这里可以自定义样式\r\n                //doc.write(\"<LINK rel=\"stylesheet\" type=\"text/css\" href=\"css/print.css\">\");\r\n                doc.write(\"<img src='\" + mainImgSrc + \"' />\");\r\n                doc.close();\r\n                (iframe as HTMLIFrameElement).contentWindow.focus();\r\n            }\r\n\r\n            (iframe as HTMLIFrameElement).contentWindow.print();\r\n            if (navigator.userAgent.indexOf(\"MSIE\") > 0) {\r\n                document.body.removeChild(iframe);\r\n            }\r\n        }\r\n    }\r\n\r\n    const customizeSelectNode = useCallback((originNode) => {\r\n        console.log(originNode);\r\n        return (\r\n            <div>\r\n                {originNode}\r\n                <Divider style={{ margin: '4px 0' }} />\r\n                <div style={{ display: 'flex', flexWrap: 'nowrap', justifyContent: 'center', padding: 2 }}>\r\n                    <Button type=\"primary\" icon={<PlusOutlined />}>导入 BOM</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-2) }}>生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>生产订单编辑</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">产品配置</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"产品配置\"\r\n                    bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                            <Button type=\"default\" shape=\"round\">取消</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={18}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card title=\"基本信息\" headStyle={{ fontWeight: 'bold' }} extra={<Button type=\"primary\" shape=\"round\" onClick={create_barcode}>生成条形码</Button>}>\r\n                                    <Form\r\n                                        layout=\"inline\"\r\n                                    >\r\n                                        <Form.Item label=\"产品序列号\" name=\"device_id\">\r\n                                            <Input placeholder=\"请输入产品序列号\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"产品料号\" name=\"friend_id\">\r\n                                            <Input placeholder=\"请输入产品料号\" />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item label=\"产品名称\" name=\"device_name\">\r\n                                            <Input placeholder=\"请输入产品名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"开始时间\" name=\"device_start_time\">\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"计划完成时间\" name=\"device_finish_time\">\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"综合方案选择\" name=\"device_finish_time\">\r\n                                            <Select style={{ width: '250px' }}>\r\n                                                <Select.Option value=\"1\">1</Select.Option>\r\n                                                <Select.Option value=\"2\">2</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"设备属性\"\r\n                                    headStyle={{ fontWeight: 'bold' }}\r\n                                >\r\n                                    \r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                        <Col span={6}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"条码生成区\"\r\n                                    extra={<Tooltip title=\"打印条形码\" color=\"#40a9ff\"><Button onClick={handlePrint} icon={<PrinterTwoTone />} shape=\"circle\"></Button></Tooltip>}\r\n                                    bodyStyle={{ minHeight: '150px', padding: 0, overflow: 'hidden', position: 'relative' }}\r\n                                >\r\n                                    <div className=\"bar-area\" ref={mainRef}>\r\n                                        <canvas ref={refBarContainer} className=\"barcode-container\" />\r\n                                    </div>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"零部件 BOM 方案预览\"\r\n                                >\r\n\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\api\\login.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\staff.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\product.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\index.tsx",["222"],"import React, { useRef, useReducer } from 'react'\r\nimport {\r\n    Form,\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Select,\r\n    Table,\r\n    Input,\r\n    Divider,\r\n    Breadcrumb,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    FolderOpenOutlined\r\n} from '@ant-design/icons'\r\nimport './part_configuration_add.less'\r\nimport XLSX from 'xlsx'\r\nimport { getDataSource } from '../../../../tools/index'\r\nimport { dataSourceReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function PartConfigurationAdd(props) {\r\n    const [form] = Form.useForm()\r\n    const inputRef = useRef(null)\r\n    const [state, dispatch] = useReducer(dataSourceReducer, [])\r\n\r\n    const columns = [\r\n        { title: '母件编码 *(cpspcode)H', dataIndex: 'bom_a', key: 'bom_a', width: 100 },\r\n        { title: '母件名称 *(cinvname)H', dataIndex: 'bom_b', key: 'bom_b', width: 100 },\r\n        { title: '规格型号(cinvstd)H', dataIndex: 'bom_c', key: 'bom_c', width: 100 },\r\n        { title: '是否展开(bexpand)H', dataIndex: 'bom_d', key: 'bom_d', width: 100 },\r\n        { title: '部门名称(cdepname)H', dataIndex: 'bom_e', key: 'bom_e', width: 100 },\r\n        { title: '部门编码(cdepcode)H', dataIndex: 'bom_f', key: 'bom_f', width: 100 },\r\n        { title: '默认成本BOM(bmrcbbom)H', dataIndex: 'bom_g', key: 'bom_g', width: 100 },\r\n        { title: '版本号(csocode)H', dataIndex: 'bom_h', key: 'bom_h', width: 100 },\r\n        { title: '备注(cmemo)H', dataIndex: 'bom_i', key: 'bom_i', width: 100 },\r\n        { title: '子件编码(cpscode)', dataIndex: 'bom_j', key: 'bom_j', width: 100 },\r\n        { title: '子件名称(cinvname)', dataIndex: 'bom_k', key: 'bom_k', width: 100 },\r\n        { title: '规格型号(cinvstd)', dataIndex: 'bom_l', key: 'bom_l', width: 150 },\r\n        { title: '版本号(csocode)', dataIndex: 'bom_m', key: 'bom_m', width: 100 },\r\n        { title: '主计量(ccomunitname)', dataIndex: 'bom_n', key: 'bom_n', width: 100 },\r\n        { title: '基本用量分子(ipsquantity)', dataIndex: 'bom_o', key: 'bom_o', width: 200 },\r\n        { title: '基本用量分母(tdqtyd)', dataIndex: 'bom_p', key: 'bom_p', width: 200 },\r\n        { title: '标准单价(fbzdj)', dataIndex: 'bom_q', key: 'bom_q', width: 150 },\r\n        { title: '标准物料成本(fbzwlcb)', dataIndex: 'bom_r', key: 'bom_r', width: 200 },\r\n        { title: '损耗率%(iwasterate)', dataIndex: 'bom_s', key: 'bom_s', width: 100 },\r\n        { title: '存放仓库(cwhname)', dataIndex: 'bom_t', key: 'bom_t', width: 100 },\r\n        { title: '库管员(cpersonname)', dataIndex: 'bom_u', key: 'bom_u', width: 100 },\r\n        { title: '用料车间(usedept)', dataIndex: 'bom_v', key: 'bom_v', width: 100 },\r\n        { title: '物料类型(wiptype)', dataIndex: 'bom_w', key: 'bom_w', width: 100 },\r\n        { title: '替代标示(replaceflag)', dataIndex: 'bom_x', key: 'bom_x', width: 100 },\r\n        { title: '图片(ginvpicture)', dataIndex: 'bom_y', key: 'bom_y', width: 100 },\r\n    ]\r\n\r\n    const handleSave = () => {\r\n\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        inputRef.current.dispatchEvent(new MouseEvent('click', { bubbles: true }));\r\n    }\r\n\r\n    const handleChange = () => {\r\n        let file = inputRef.current.files[0]\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n            var workbook = XLSX.read(data, { type: 'binary' });\r\n            var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            var json = XLSX.utils.sheet_to_json(worksheet);\r\n            let payload = getDataSource(json)\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_DATA_SOURCE,\r\n                payload\r\n            })\r\n            message.success('数据导入成功！')\r\n        };\r\n        if (file) {\r\n            reader.readAsBinaryString(file);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>零件 BOM 列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">BOM 方案编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"BOM 方案编辑\"\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button shape=\"round\" type=\"default\" icon={<FolderOpenOutlined />} onClick={handleAdd}>导入方案</Button>\r\n                            <input type=\"file\" id=\"file\" name=\"file\" accept=\".XLS\" onChange={handleChange} ref={inputRef} style={{ display: 'none' }} />\r\n                            <Button shape=\"round\" type=\"primary\" onClick={handleSave}>保存修改</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form form={form} layout=\"inline\">\r\n                        <Form.Item label=\"BOM 方案名称\" name=\"bom_name\" className=\"form-item\" style={{ width: '450px' }}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table bordered scroll={{ x: 2900 }} columns={columns} dataSource={state} />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\integratedconfig.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx",["223","224"],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\index.tsx",["225","226","227","228","229"],"import React, { useEffect, useMemo, useReducer, useState } from 'react'\r\nimport {\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Switch,\r\n    Table,\r\n    message,\r\n    Popconfirm,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc'\r\nimport arrayMove from 'array-move';\r\nimport './form_configuration.less'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport {\r\n    PreviewForm\r\n} from '../../../../components'\r\nimport { formOptionsReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\nimport { fromJS } from 'immutable'\r\nimport { addMould } from '../../../../api/integratedconfig'\r\n\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableList = SortableContainer(props => <tbody {...props} />);\r\n\r\nexport default function FormConfigurationAdd(props) {\r\n\r\n    const DragHandle = SortableHandle(() => (\r\n        <MenuOutlined style={{ cursor: 'pointer', color: '#999' }} />\r\n    ));\r\n\r\n    const columns = [\r\n        { dataIndex: 'sort', width: 50, className: 'drag-visible', render: () => <DragHandle /> },\r\n        { title: '工单子项名称', dataIndex: 'item_name', className: 'drag-visible', },\r\n        {\r\n            title: '操作', width: 150, render: (text, record) => (\r\n                <Space size={16}>\r\n                    <Button type=\"default\" size=\"small\" shape=\"round\" onClick={handleEditFormProps.bind(null, record)}>编辑</Button>\r\n                    <Popconfirm\r\n                        placement=\"right\"\r\n                        title=\"确定要删除该项？\"\r\n                        onConfirm={handleDeleteFormProps.bind(null, record)}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button type=\"primary\" size=\"small\" shape=\"round\" danger>删除</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    // reducer\r\n    const [state, dispatch] = useReducer(formOptionsReducer, fromJS({\r\n        basicOptions: {},\r\n        formProps: [],\r\n        formPropsIndex: 0\r\n    }))\r\n\r\n    console.log(state.toJS())\r\n\r\n    const [form1] = Form.useForm()\r\n    const [form2] = Form.useForm()\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMove([].concat(state.get(\"formProps\")), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_FORM_PROPS,\r\n                payload: newData\r\n            })\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = state.get(\"formProps\").findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableList\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    const handleEditFormProps = () => {\r\n\r\n    }\r\n\r\n    const handleDeleteFormProps = (e) => {\r\n        dispatch({\r\n            type: ACTION_TYPE.DELETE_FORM_PROP,\r\n            payload: e\r\n        })\r\n        message.info('工单项已删除！')\r\n    }\r\n\r\n    // 工单基本配置提交\r\n    const handleSaveOptions = () => {\r\n        let { form_name, form_abbreviation, belong_work, belong_step } = form1.getFieldsValue()\r\n        dispatch({\r\n            type: ACTION_TYPE.SET_BASIC_OPTIONS,\r\n            payload: {\r\n                form_name,\r\n                form_abbreviation,\r\n                belong_work,\r\n                belong_step\r\n            }\r\n        })\r\n    }\r\n\r\n    // 添加工单子项提交\r\n    const handleAddItem = () => {\r\n        const {\r\n            item_name,\r\n            item_submit_type,\r\n            item_is_required,\r\n            item_is_readonly,\r\n            item_span\r\n        } = form2.getFieldsValue()\r\n        if (item_name && item_submit_type && item_span) {\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_FORM_PROPS,\r\n                payload: [\r\n                    ...state.get(\"formProps\"),\r\n                    {\r\n                        item_name,\r\n                        item_submit_type,\r\n                        item_is_required,\r\n                        item_is_readonly,\r\n                        item_span,\r\n                        key: state.get(\"formPropsIndex\"),\r\n                        index: state.get(\"formPropsIndex\")\r\n                    }\r\n                ]\r\n            })\r\n            dispatch({\r\n                type: ACTION_TYPE.ADD_FORM_PROPS_INDEX\r\n            })\r\n        } else {\r\n            message.warning(\"必要信息未填！\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleSaveFormModel = () => {\r\n        addMould(JSON.stringify(state)).then((res: any) => {\r\n            if (res.code === 200) {\r\n                message.success(res.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>工单模板列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">工单配置</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"工单配置\"\r\n                    bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleSaveFormModel}>提交保存</Button>}\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"工单基本配置\"\r\n                                    bodyStyle={{ padding: '12px 20px' }}\r\n                                    extra={<Button type='primary' shape=\"round\" onClick={handleSaveOptions}>提交保存</Button>}\r\n                                >\r\n                                    <Form\r\n                                        layout=\"inline\"\r\n                                        form={form1}\r\n                                    >\r\n                                        <Form.Item label=\"工单名称\" name=\"form_name\">\r\n                                            <Input placeholder=\"请输入工单名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"所属岗位\" name=\"belong_work\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"1\">1</Select.Option>\r\n                                                <Select.Option value=\"2\">2</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"所属设备类型\" name=\"device_type\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"1\">1</Select.Option>\r\n                                                <Select.Option value=\"2\">2</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"新增工单子项\"\r\n                                    bodyStyle={{ padding: '12px 20px' }}\r\n                                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleAddItem}>添加子项</Button>}\r\n                                >\r\n                                    <Form\r\n                                        form={form2}\r\n                                        layout=\"inline\"\r\n                                        initialValues={{\r\n                                            ['item_is_required']: true,\r\n                                            ['item_is_readonly']: false\r\n                                        }}\r\n                                    >\r\n                                        <Form.Item label=\"工单子项名称\" name=\"item_name\">\r\n                                            <Input placeholder=\"请输入工单子项名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"工单子项输入形式\" name=\"item_submit_type\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"input\">文字输入</Select.Option>\r\n                                                <Select.Option value=\"select\">下拉选择</Select.Option>\r\n                                                <Select.Option value=\"upload\">图片上传</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"是否必填\" name=\"item_is_required\" valuePropName=\"checked\">\r\n                                            <Switch />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"是否只读\" name=\"item_is_readonly\" valuePropName=\"checked\">\r\n                                            <Switch />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"子项所占行距\" name=\"item_span\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"8\">1/3 行</Select.Option>\r\n                                                <Select.Option value=\"12\">1/2 行</Select.Option>\r\n                                                <Select.Option value=\"24\">1 行</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"工单子项列表\"\r\n                                    bodyStyle={{ padding: '0' }}\r\n                                >\r\n                                    <Table\r\n                                        pagination={false}\r\n                                        columns={columns}\r\n                                        dataSource={state.toJS().formProps}\r\n                                        rowKey=\"index\"\r\n                                        bordered\r\n                                        components={{\r\n                                            body: {\r\n                                                wrapper: DraggableContainer,\r\n                                                row: DraggableBodyRow,\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"工单预览\"\r\n                                    bodyStyle={{ padding: '0 25px 25px 25px' }}\r\n                                >\r\n                                    <PreviewForm basicOptions={state.toJS().basicOptions} formItemProps={state.toJS().formProps} />\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\processConfigurationAdd\\index.tsx",["230"],"import React, { FC } from 'react'\r\nimport {\r\n    Space,\r\n    Breadcrumb,\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Select\r\n} from 'antd'\r\nimport './process_configuration_add.less'\r\n\r\nconst processConfigurationAdd = (props) => {\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>综合方案列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">方案编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n\r\n                <Card\r\n                    title=\"方案编辑\"\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form>\r\n                        <Form.Item label=\"设备类型\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"BOM方案\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"生产工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"质检工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"仓库工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default processConfigurationAdd","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\index.tsx",["231"],"D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\checkForm_detail\\index.tsx",[],{"ruleId":"232","severity":1,"message":"233","line":4,"column":47,"nodeType":"234","messageId":"235","endLine":4,"endColumn":55},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"232","severity":1,"message":"240","line":9,"column":19,"nodeType":"234","messageId":"235","endLine":9,"endColumn":29},{"ruleId":"241","severity":1,"message":"242","line":24,"column":18,"nodeType":"243","messageId":"244","endLine":24,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":57,"column":32,"nodeType":"247","messageId":"248","endLine":57,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":57,"column":46,"nodeType":"247","messageId":"248","endLine":57,"endColumn":47},{"ruleId":"245","severity":1,"message":"246","line":62,"column":36,"nodeType":"247","messageId":"248","endLine":62,"endColumn":37},{"ruleId":"245","severity":1,"message":"246","line":62,"column":50,"nodeType":"247","messageId":"248","endLine":62,"endColumn":51},{"ruleId":"249","severity":1,"message":"250","line":64,"column":16,"nodeType":"251","endLine":64,"endColumn":45},{"ruleId":"232","severity":1,"message":"252","line":15,"column":5,"nodeType":"234","messageId":"235","endLine":15,"endColumn":23},{"ruleId":"245","severity":1,"message":"246","line":74,"column":32,"nodeType":"247","messageId":"248","endLine":74,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":74,"column":46,"nodeType":"247","messageId":"248","endLine":74,"endColumn":47},{"ruleId":"232","severity":1,"message":"253","line":8,"column":5,"nodeType":"234","messageId":"235","endLine":8,"endColumn":16},{"ruleId":"249","severity":1,"message":"250","line":37,"column":60,"nodeType":"251","endLine":37,"endColumn":63},{"ruleId":"232","severity":1,"message":"254","line":40,"column":11,"nodeType":"234","messageId":"235","endLine":40,"endColumn":15},{"ruleId":"245","severity":1,"message":"246","line":47,"column":32,"nodeType":"247","messageId":"248","endLine":47,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":47,"column":46,"nodeType":"247","messageId":"248","endLine":47,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":85,"column":8,"nodeType":"257","endLine":85,"endColumn":10,"suggestions":"258"},{"ruleId":"232","severity":1,"message":"259","line":13,"column":5,"nodeType":"234","messageId":"235","endLine":13,"endColumn":10},{"ruleId":"232","severity":1,"message":"260","line":70,"column":13,"nodeType":"234","messageId":"235","endLine":70,"endColumn":19},{"ruleId":"245","severity":1,"message":"246","line":55,"column":32,"nodeType":"247","messageId":"248","endLine":55,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":55,"column":46,"nodeType":"247","messageId":"248","endLine":55,"endColumn":47},{"ruleId":"255","severity":1,"message":"261","line":47,"column":8,"nodeType":"257","endLine":47,"endColumn":10,"suggestions":"262"},{"ruleId":"263","severity":1,"message":"264","line":53,"column":86,"nodeType":"265","messageId":"266","endLine":53,"endColumn":105,"fix":"267"},{"ruleId":"232","severity":1,"message":"268","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"269","line":12,"column":5,"nodeType":"234","messageId":"235","endLine":12,"endColumn":10},{"ruleId":"232","severity":1,"message":"270","line":13,"column":5,"nodeType":"234","messageId":"235","endLine":13,"endColumn":9},{"ruleId":"232","severity":1,"message":"271","line":25,"column":10,"nodeType":"234","messageId":"235","endLine":25,"endColumn":18},{"ruleId":"232","severity":1,"message":"272","line":42,"column":12,"nodeType":"234","messageId":"235","endLine":42,"endColumn":16},{"ruleId":"232","severity":1,"message":"273","line":90,"column":11,"nodeType":"234","messageId":"235","endLine":90,"endColumn":30},{"ruleId":"232","severity":1,"message":"274","line":7,"column":5,"nodeType":"234","messageId":"235","endLine":7,"endColumn":11},{"ruleId":"245","severity":1,"message":"246","line":24,"column":32,"nodeType":"247","messageId":"248","endLine":24,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":24,"column":46,"nodeType":"247","messageId":"248","endLine":24,"endColumn":47},{"ruleId":"232","severity":1,"message":"275","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":26},{"ruleId":"232","severity":1,"message":"276","line":1,"column":28,"nodeType":"234","messageId":"235","endLine":1,"endColumn":35},{"ruleId":"232","severity":1,"message":"277","line":1,"column":49,"nodeType":"234","messageId":"235","endLine":1,"endColumn":57},{"ruleId":"263","severity":1,"message":"278","line":223,"column":45,"nodeType":"265","messageId":"266","endLine":223,"endColumn":71,"fix":"279"},{"ruleId":"263","severity":1,"message":"280","line":224,"column":45,"nodeType":"265","messageId":"266","endLine":224,"endColumn":72,"fix":"281"},{"ruleId":"232","severity":1,"message":"282","line":1,"column":17,"nodeType":"234","messageId":"235","endLine":1,"endColumn":19},{"ruleId":"232","severity":1,"message":"274","line":6,"column":5,"nodeType":"234","messageId":"235","endLine":6,"endColumn":11},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"'setIsLogin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'FolderOpenOutlined' is defined but never used.","'InputNumber' is defined but never used.","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["285"],"'Alert' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["286"],"no-useless-computed-key","Unnecessarily computed property ['remember'] found.","Property","unnecessarilyComputedProperty",{"range":"287","text":"288"},"'ReactNode' is defined but never used.","'Table' is defined but never used.","'List' is defined but never used.","'isIFrame' is defined but never used.","'form' is assigned a value but never used.","'customizeSelectNode' is assigned a value but never used.","'Select' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","Unnecessarily computed property ['item_is_required'] found.",{"range":"289","text":"290"},"Unnecessarily computed property ['item_is_readonly'] found.",{"range":"291","text":"292"},"'FC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},[1721,1733],"'remember'",[8580,8600],"'item_is_required'",[8653,8673],"'item_is_readonly'","Update the dependencies array to be: [props.location.search]",{"range":"297","text":"298"},"Update the dependencies array to be: [props.history]",{"range":"299","text":"300"},[3028,3030],"[props.location.search]",[1476,1478],"[props.history]"]