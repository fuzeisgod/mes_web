[{"D:\\fuzzy work\\mes_web\\src\\index.tsx":"1","D:\\fuzzy work\\mes_web\\src\\App.tsx":"2","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts":"3","D:\\fuzzy work\\mes_web\\src\\components\\index.ts":"4","D:\\fuzzy work\\mes_web\\src\\tools\\index.ts":"5","D:\\fuzzy work\\mes_web\\src\\views\\index.ts":"6","D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx":"7","D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx":"8","D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx":"9","D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx":"10","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx":"11","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx":"12","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx":"13","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx":"14","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx":"15","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx":"16","D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx":"17","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts":"18","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts":"19","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx":"20","D:\\fuzzy work\\mes_web\\src\\api\\login.ts":"21","D:\\fuzzy work\\mes_web\\src\\api\\index.ts":"22","D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts":"23","D:\\fuzzy work\\mes_web\\src\\api\\staff.ts":"24","D:\\fuzzy work\\mes_web\\src\\api\\product.ts":"25","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\reducer.ts":"26","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\typings.ts":"27","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\reducer.ts":"28","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\typings.ts":"29","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\index.tsx":"30","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\typings.ts":"31","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\reducer.ts":"32","D:\\fuzzy work\\mes_web\\src\\api\\integratedconfig.ts":"33","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\reducer.ts":"34","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\typings.ts":"35","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx":"36","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\index.tsx":"37","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\reducer.ts":"38","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\typings.ts":"39","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\reducer.ts":"40","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\typings.ts":"41","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\processConfigurationAdd\\index.tsx":"42","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\index.tsx":"43","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\checkForm_detail\\index.tsx":"44","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\reducer.ts":"45","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\typings.ts":"46"},{"size":874,"mtime":1616643254940,"results":"47","hashOfConfig":"48"},{"size":1567,"mtime":1614586645986,"results":"49","hashOfConfig":"48"},{"size":3346,"mtime":1615515624059,"results":"50","hashOfConfig":"48"},{"size":146,"mtime":1609119180528,"results":"51","hashOfConfig":"48"},{"size":2579,"mtime":1614934066709,"results":"52","hashOfConfig":"48"},{"size":1814,"mtime":1615514754199,"results":"53","hashOfConfig":"48"},{"size":4959,"mtime":1615449770772,"results":"54","hashOfConfig":"48"},{"size":3109,"mtime":1615256701244,"results":"55","hashOfConfig":"48"},{"size":258,"mtime":1609119180520,"results":"56","hashOfConfig":"48"},{"size":559,"mtime":1609119180538,"results":"57","hashOfConfig":"48"},{"size":10339,"mtime":1616739581598,"results":"58","hashOfConfig":"48"},{"size":7178,"mtime":1615189633674,"results":"59","hashOfConfig":"48"},{"size":10184,"mtime":1617006343890,"results":"60","hashOfConfig":"48"},{"size":7686,"mtime":1616653444818,"results":"61","hashOfConfig":"48"},{"size":3530,"mtime":1609119180538,"results":"62","hashOfConfig":"48"},{"size":3678,"mtime":1615515769811,"results":"63","hashOfConfig":"48"},{"size":2839,"mtime":1616552161803,"results":"64","hashOfConfig":"48"},{"size":377,"mtime":1613613143952,"results":"65","hashOfConfig":"48"},{"size":636,"mtime":1614737236043,"results":"66","hashOfConfig":"48"},{"size":12333,"mtime":1617009948677,"results":"67","hashOfConfig":"48"},{"size":220,"mtime":1616490008239,"results":"68","hashOfConfig":"48"},{"size":1227,"mtime":1616461392990,"results":"69","hashOfConfig":"48"},{"size":1359,"mtime":1616490191645,"results":"70","hashOfConfig":"48"},{"size":134,"mtime":1616552302815,"results":"71","hashOfConfig":"48"},{"size":1993,"mtime":1617009850144,"results":"72","hashOfConfig":"48"},{"size":1594,"mtime":1616722075606,"results":"73","hashOfConfig":"48"},{"size":711,"mtime":1616722000390,"results":"74","hashOfConfig":"48"},{"size":919,"mtime":1617006238364,"results":"75","hashOfConfig":"48"},{"size":350,"mtime":1617006169803,"results":"76","hashOfConfig":"48"},{"size":5716,"mtime":1615190956015,"results":"77","hashOfConfig":"48"},{"size":70,"mtime":1614934240860,"results":"78","hashOfConfig":"48"},{"size":324,"mtime":1614935750250,"results":"79","hashOfConfig":"48"},{"size":409,"mtime":1615339914895,"results":"80","hashOfConfig":"48"},{"size":324,"mtime":1615172947291,"results":"81","hashOfConfig":"48"},{"size":70,"mtime":1615172956113,"results":"82","hashOfConfig":"48"},{"size":4150,"mtime":1615516005786,"results":"83","hashOfConfig":"48"},{"size":12746,"mtime":1615449082442,"results":"84","hashOfConfig":"48"},{"size":881,"mtime":1615273859455,"results":"85","hashOfConfig":"48"},{"size":209,"mtime":1615270995980,"results":"86","hashOfConfig":"48"},{"size":317,"mtime":1615342239615,"results":"87","hashOfConfig":"48"},{"size":70,"mtime":1615341946273,"results":"88","hashOfConfig":"48"},{"size":3598,"mtime":1615429678236,"results":"89","hashOfConfig":"48"},{"size":4898,"mtime":1615527753837,"results":"90","hashOfConfig":"48"},{"size":4279,"mtime":1615530350025,"results":"91","hashOfConfig":"48"},{"size":854,"mtime":1617008875411,"results":"92","hashOfConfig":"48"},{"size":255,"mtime":1617008835657,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"12tl25p",{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"136","usedDeprecatedRules":"97"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"97"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"97"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"179","usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"97"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"97"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\fuzzy work\\mes_web\\src\\index.tsx",["200"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { mainRoutes } from './routes'\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\n\r\nmoment.locale('zh-cn');\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            mainRoutes.map(route => (\r\n              <Route path={route.pathName} component={route.component} key={route.pathName} />\r\n            ))\r\n          }\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  </ConfigProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n",["201","202"],"D:\\fuzzy work\\mes_web\\src\\App.tsx",["203"],"import './App.less'\r\nimport { Frame, Loading } from './components';\r\nimport { Suspense, useState, FC, ReactElement } from 'react'\r\nimport { adminRoutes } from './routes'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { insertUserId } from './tools'\r\n\r\nconst App: FC = (): ReactElement => {\r\n  const [isLogin, setIsLogin] = useState<boolean>(localStorage.getItem('key') ? true : false)\r\n\r\n  return (\r\n    isLogin\r\n      ?\r\n      <Frame>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => (\r\n                route.isSubMenu ?\r\n                  route.subMenu.map(subRoute => (\r\n                    <Route\r\n                      path={subRoute.pathName}\r\n                      key={subRoute.pathName}\r\n                      component={subRoute.component}\r\n                      exact={subRoute.exact}\r\n                    />\r\n                  ))\r\n                  :\r\n                  <Route\r\n                    path={route.pathName}\r\n                    key={route.pathName}\r\n                    component={route.component}\r\n                    exact={route.exact}\r\n                  />\r\n              ))\r\n            }\r\n            <Redirect\r\n              // you need insert userid here\r\n              to={insertUserId(adminRoutes[0].pathName, 'my-userid')}\r\n              from=\"/\"\r\n              exact />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Frame>\r\n      :\r\n      <Redirect to=\"/login\" />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\index.ts",["204"],"// insert userID\r\n// parameter: [需要修改的path， 需要插入的userid]\r\n// attention: 只对routeArr第二位做修改\r\nexport const insertUserId = (prevPath: string, userId: string): string => {\r\n    let routeArr: Array<string> = prevPath.split('/')\r\n    routeArr.splice(1, 1, userId)\r\n    return routeArr.join('/')\r\n}\r\n\r\nexport const cutURLForSelectedKeys = (url: string): string => {\r\n    let routeArr: Array<string> = url.split('/')\r\n    routeArr.length = 3;\r\n    return routeArr.join('/')\r\n}\r\n\r\nexport const isIFrame = (input: HTMLElement | null): input is HTMLIFrameElement => {\r\n    return input !== null && input.tagName === 'IFRAME';\r\n}\r\n\r\nexport const getSearchObj = (str: string): { [key: string]: any } => {\r\n    if (!str) return\r\n    let target = {}\r\n    let n = str.split('?')[1].split('&')\r\n    n.map((item) => {\r\n        let m = item.split('=')\r\n        target[m[0]] = m[1]\r\n    })\r\n    return target\r\n}\r\n\r\nexport const getDataSource = (json) => {\r\n    let target = []\r\n    json.forEach((item, index) => {\r\n        target.push({\r\n            key: index,\r\n            bom_a: item[\"母件编码 *(cpspcode)H\"] || \"\",\r\n            bom_b: item[\"母件名称 *(cinvname)H\"] || \"\",\r\n            bom_c: item[\"规格型号(cinvstd)H\"] || \"\",\r\n            bom_d: item[\"是否展开(bexpand)H\"] || \"\",\r\n            bom_e: item[\"部门名称(cdepname)H\"] || \"\",\r\n            bom_f: item[\"部门编码(cdepcode)H\"] || \"\",\r\n            bom_g: item[\"默认成本BOM(bmrcbbom)H\"] || \"\",\r\n            bom_h: item[\"版本号(csocode)H\"] || \"\",\r\n            bom_i: item[\"备注(cmemo)H\"] || \"\",\r\n            bom_j: item[\"子件编码(cpscode)\"] || \"\",\r\n            bom_k: item[\"子件名称(cinvname)\"] || \"\",\r\n            bom_l: item[\"规格型号(cinvstd)\"] || \"\",\r\n            bom_m: item[\"版本号(csocode)\"] || \"\",\r\n            bom_n: item[\"主计量(ccomunitname)\"] || \"\",\r\n            bom_o: item[\"基本用量分子(ipsquantity)\"] || \"\",\r\n            bom_p: item[\"基本用量分母(tdqtyd)\"] || \"\",\r\n            bom_q: item[\"标准单价(fbzdj)\"] || \"\",\r\n            bom_r: item[\"标准物料成本(fbzwlcb)\"] || \"\",\r\n            bom_s: item[\"损耗率%(iwasterate)\"] || \"\",\r\n            bom_t: item[\"存放仓库(cwhname)\"] || \"\",\r\n            bom_u: item[\"库管员(cpersonname)\"] || \"\",\r\n            bom_v: item[\"用料车间(usedept)\"] || \"\",\r\n            bom_w: item[\"物料类型(wiptype)\"] || \"\",\r\n            bom_x: item[\"替代标示(replaceflag)\"] || \"\",\r\n            bom_y: item[\"图片(ginvpicture)\"] || \"\",\r\n        })\r\n    })\r\n\r\n    return target\r\n}","D:\\fuzzy work\\mes_web\\src\\views\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx",["205","206","207","208","209"],"import React, { FC, ReactElement, useEffect, useReducer, useState } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb,\r\n    Space,\r\n    Popconfirm,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order.less'\r\nimport { ISearch } from './typings'\r\nimport moment from 'moment';\r\nimport { getProductOrdersList, deleteProductOrder } from '../../api/product'\r\nimport { getUsersList } from '../../api/staff'\r\nimport { productOrderListReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst ProductionOrders: FC = (props: any): ReactElement => {\r\n    const [form] = Form.useForm()\r\n\r\n    const [_state, dispatch] = useReducer(productOrderListReducer, {\r\n        tableData: [],\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        searchInfo: {\r\n            orderNo: null,\r\n            startTime: null,\r\n            endTime: null,\r\n            chargeUserId: null\r\n        },\r\n        userList: [],\r\n        freshFlag: false\r\n    })\r\n\r\n    const onFinish = (values: ISearch) => {\r\n        let { orderNo, chargeUserId, orderTime } = values;\r\n        dispatch({\r\n            type: ACTION_TYPE.SET_SEARCH_INFO,\r\n            payload: {\r\n                orderNo,\r\n                startTime: orderTime ? orderTime[0].toJSON() : '',\r\n                endTime: orderTime ? orderTime[1].toJSON() : '',\r\n                chargeUserId\r\n            }\r\n        })\r\n    }\r\n\r\n    const add_new_order = () => {\r\n        // you need insert userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order')\r\n    }\r\n\r\n    const editRender = (record) => {\r\n\r\n        const handleClickEdit = () => {\r\n            props.history.push('/' + 'my-userid' + '/po/edit_order/?orderId=' + record.Id)\r\n        }\r\n        const handleDelete = () => {\r\n            deleteProductOrder(record.Id).then((res: any) => {\r\n                if (res.code === 200) {\r\n                    message.success('删除成功！')\r\n                    dispatch({\r\n                        type: ACTION_TYPE.CHANGE_FRESH_FLAG\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        return (\r\n            <Space size={16}>\r\n                <Button onClick={handleClickEdit} type=\"primary\" size=\"small\" shape=\"round\">编辑</Button>\r\n                <Popconfirm title=\"确认删除？\" icon={<ExclamationCircleOutlined style={{ color: 'red' }} />} onConfirm={handleDelete}>\r\n                    <Button danger type=\"primary\" size=\"small\" shape=\"round\">删除</Button>\r\n                </Popconfirm>\r\n            </Space>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { title: '生产订单编号', dataIndex: 'OrderNo', key: 'OrderNo' },\r\n        { title: '产品数量', dataIndex: 'ProductCount', key: 'ProductCount' },\r\n        { title: '开单时间', dataIndex: 'CreateTime', key: 'CreateTime' },\r\n        { title: '计划完成时间', dataIndex: 'PlanTime', key: 'PlanTime' },\r\n        { title: '是否加急', dataIndex: 'IsUrgent', key: 'IsUrgent' },\r\n        { title: '订单负责人', dataIndex: 'ChargeUser', key: 'ChargeUser' },\r\n        { title: '操作', key: 'OrderAction', render: editRender },\r\n    ]\r\n\r\n    const expandedRowRender = (record) => {\r\n        const columns = [\r\n            { title: '产品序列号', dataIndex: 'SerialNo', key: 'SerialNo' },\r\n            { title: 'TerminalID', dataIndex: 'TerminalId', key: 'TerminalId' },\r\n            { title: '产品料号', dataIndex: 'MaterialCode', key: 'MaterialCode' },\r\n            { title: '产品名称', dataIndex: 'Name', key: 'Name' },\r\n            { title: '开始时间', dataIndex: 'CreateTime', key: 'CreateTime' },\r\n            { title: '计划完成时间', dataIndex: 'PlanTime', key: 'PlanTime' },\r\n        ]\r\n\r\n        let data = record.Devices.map(item => ({\r\n            ...item,\r\n            CreateTime: moment(item.CreateTime).format('YYYY年 MM月 DD日 HH:mm:ss'),\r\n            PlanTime: moment(item.PlanTime).format('YYYY年 MM月 DD日 HH:mm:ss'),\r\n            key: item.SerialNo\r\n        }))\r\n\r\n        return <Table className=\"sub-table\" bordered={true} columns={columns} dataSource={data} pagination={false} />;\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('search data ...')\r\n        getProductOrdersList({\r\n            startTime: _state.searchInfo.startTime || '',\r\n            endTime: _state.searchInfo.endTime || '',\r\n            orderNo: _state.searchInfo.orderNo || '',\r\n            chargeUserId: _state.searchInfo.chargeUserId || '',\r\n            page: _state.page,\r\n            limit: _state.limit\r\n        }).then((res: any) => {\r\n            if (res.code === 200) {\r\n                let n = res.data.map(item => ({\r\n                    ...item,\r\n                    CreateTime: moment(item.CreateTime).format('YYYY年 MM月 DD日 HH:mm:ss'),\r\n                    PlanTime: moment(item.PlanTime).format('YYYY年 MM月 DD日 HH:mm:ss'),\r\n                    ProductCount: item.Devices.length,\r\n                    key: item.Id,\r\n                    IsUrgent: item.isUrgent ? <span style={{ color: 'red' }}>加急</span> : <span style={{ color: 'green' }}>正常</span>\r\n                }))\r\n                dispatch({\r\n                    type: ACTION_TYPE.SET_ORDER_LIST,\r\n                    payload: {\r\n                        tableData: n,\r\n                        total: res.count\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }, [_state.page, _state.limit, _state.searchInfo.orderNo, _state.searchInfo.startTime, _state.searchInfo.endTime, _state.searchInfo.chargeUserId, _state.freshFlag])\r\n\r\n    useEffect(() => {\r\n        getUsersList().then((res: any) => {\r\n            if (res.code === 200) {\r\n                let n = res.data.map(item => ({\r\n                    Name: item.Name,\r\n                    Id: item.Id\r\n                }))\r\n                dispatch({\r\n                    type: ACTION_TYPE.SET_USER_LIST,\r\n                    payload: n\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">生产订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"生产订单列表\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Button icon={<PlusOutlined />} shape=\"round\" type=\"primary\" onClick={add_new_order}>添加新订单</Button>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"生产订单编号\" name=\"orderNo\">\r\n                            <Input placeholder=\"请输入生产订单编号\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单时间\" name=\"orderTime\">\r\n                            <RangePicker\r\n                                ranges={{\r\n                                    '今天': [moment(), moment()],\r\n                                    '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单责任人\" name=\"chargeUserId\">\r\n                            <Select style={{ width: '120px' }} allowClear>\r\n                                {\r\n                                    _state.userList.length !== 0 && _state.userList.map(item => {\r\n                                        return <Select.Option value={item.Id} key={item.Id}>{item.Name}</Select.Option>\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table\r\n                        bordered={true}\r\n                        columns={columns}\r\n                        expandable={{ expandedRowRender }}\r\n                        dataSource={_state.tableData}\r\n                        rowClassName={(record, index) => {\r\n                            let className = 'light-row';\r\n                            if (index % 2 === 1) className = 'dark-row';\r\n                            return className;\r\n                        }}\r\n                        pagination={{\r\n                            showSizeChanger: true,\r\n                            onShowSizeChange: (current, size) => {\r\n                                dispatch({\r\n                                    type: ACTION_TYPE.SET_LIMIT_COUNT,\r\n                                    payload: size\r\n                                })\r\n                            },\r\n                            onChange: (page, pageSize) => {\r\n                                dispatch({\r\n                                    type: ACTION_TYPE.SET_CURRENT_PAGE,\r\n                                    payload: page\r\n                                })\r\n                            },\r\n                            showTotal: total => `共 ${total} 条`,\r\n                            total: _state.total,\r\n                            pageSizeOptions: ['5', '10', '15', '20']\r\n                        }}\r\n                    />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductionOrders;","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx",["210","211","212"],"import React, { useEffect, useReducer, useState } from 'react'\r\nimport './part_configuration.less'\r\nimport {\r\n    Form,\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Select,\r\n    Table,\r\n    Input,\r\n    Divider,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport {\r\n    FolderOpenOutlined\r\n} from '@ant-design/icons'\r\nimport { getBomList } from '../../../api/integratedconfig'\r\nimport { dataSourceReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function DeviceConfiguration(props) {\r\n    const [form] = Form.useForm()\r\n    const [sProjectName, setSProjectName] = useState<string>(\"\")\r\n    const [sCpspcode, setSCpspcode] = useState<string>(\"\")\r\n    const [state, dispatch] = useReducer(dataSourceReducer, [])\r\n\r\n    const columns = [\r\n        { title: '方案名称', dataIndex: 'customizename', key: 'customizename' },\r\n        { title: '母件编码', dataIndex: 'cpspcodeH', key: 'cpspcodeH' },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button type=\"primary\" shape=\"round\">编辑</Button>\r\n                    <Button type=\"primary\" shape=\"round\" danger>删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    const expandedRowRender = (e) => {\r\n        console.log(e)\r\n        const columns = [\r\n            // { title: '母件编码 *(cpspcode)H', dataIndex: 'cpspcodeH', key: 'cpspcodeH', width: 100 },\r\n            // { title: '母件名称 *(cinvname)H', dataIndex: 'cinvnameH', key: 'cinvnameH', width: 100 },\r\n            // { title: '规格型号(cinvstd)H', dataIndex: 'cinvstdH', key: 'cinvstdH', width: 100 },\r\n            // { title: '是否展开(bexpand)H', dataIndex: 'bexpandH', key: 'bexpandH', width: 100 },\r\n            // { title: '部门名称(cdepname)H', dataIndex: 'cdepnameH', key: 'cdepnameH', width: 100 },\r\n            // { title: '部门编码(cdepcode)H', dataIndex: 'cdepcodeH', key: 'cdepcodeH', width: 100 },\r\n            // { title: '默认成本BOM(bmrcbbom)H', dataIndex: 'bmrcbbomH', key: 'bmrcbbomH', width: 100 },\r\n            // { title: '版本号(csocode)H', dataIndex: 'csocodeH', key: 'csocodeH', width: 100 },\r\n            // { title: '备注(cmemo)H', dataIndex: 'cmemoH', key: 'cmemoH', width: 100 },\r\n            { title: '子件编码(cpscode)', dataIndex: 'cpscode', key: 'cpscode', width: 100 },\r\n            { title: '子件名称(cinvname)', dataIndex: 'cinvname', key: 'cinvname', width: 100 },\r\n            { title: '规格型号(cinvstd)', dataIndex: 'cinvstd', key: 'cinvstd', width: 150 },\r\n            // { title: '版本号(csocode)', dataIndex: 'csocode', key: 'csocode', width: 100 },\r\n            { title: '主计量(ccomunitname)', dataIndex: 'ccomunitname', key: 'ccomunitname', width: 100 },\r\n            { title: '基本用量分子(ipsquantity)', dataIndex: 'ipsquantity', key: 'ipsquantity', width: 200 },\r\n            { title: '基本用量分母(tdqtyd)', dataIndex: 'tdqtyd', key: 'tdqtyd', width: 200 },\r\n            // { title: '标准单价(fbzdj)', dataIndex: 'fbzdj', key: 'fbzdj', width: 150 },\r\n            // { title: '标准物料成本(fbzwlcb)', dataIndex: 'fbzwlcb', key: 'fbzwlcb', width: 200 },\r\n            // { title: '损耗率%(iwasterate)', dataIndex: 'iwasterate', key: 'iwasterate', width: 100 },\r\n            // { title: '存放仓库(cwhname)', dataIndex: 'cwhname', key: 'cwhname', width: 100 },\r\n            // { title: '库管员(cpersonname)', dataIndex: 'cpersonname', key: 'cpersonname', width: 100 },\r\n            // { title: '用料车间(usedept)', dataIndex: 'usedept', key: 'usedept', width: 100 },\r\n            // { title: '物料类型(wiptype)', dataIndex: 'wiptype', key: 'wiptype', width: 100 },\r\n            // { title: '替代标示(replaceflag)', dataIndex: 'replaceflag', key: 'replaceflag', width: 100 },\r\n            // { title: '图片(ginvpicture)', dataIndex: 'ginvpicture', key: 'ginvpicture', width: 100 },\r\n        ]\r\n\r\n        return <Table bordered={true} columns={columns} dataSource={[e]} pagination={false} />;\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        props.history.push('/' + 'my-userid' + '/dc/add')\r\n    }\r\n\r\n    const handleSearch = (values) => {\r\n        let { bom_name, device_type } = values;\r\n        if (bom_name) setSProjectName(bom_name)\r\n        if (device_type) setSCpspcode(device_type)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('effct')\r\n        getBomList({ projectName: sProjectName, cpspcode: sCpspcode }).then((res: any) => {\r\n            console.log(res)\r\n            if (res.code === 200) {\r\n                let payload = res.data.map((item, index) => ({\r\n                    ...item,\r\n                    key: index\r\n                }))\r\n                dispatch({ type: ACTION_TYPE.SET_DATA_SOURCE, payload })\r\n            }\r\n        })\r\n    }, [sProjectName, sCpspcode])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">零件 BOM 列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"零件 BOM 列表\"\r\n                    extra={\r\n                        <Space size={16}>\r\n                            {/* <Button shape=\"round\" type=\"default\" icon={<FolderOpenOutlined />}>导入方案</Button> */}\r\n                            <Button shape=\"round\" type=\"primary\" onClick={handleAdd}>添加 BOM</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form form={form} layout=\"inline\" onFinish={handleSearch}>\r\n                        <Form.Item label=\"设备类型\" name=\"device_type\" className=\"form-item\">\r\n                            <Select style={{ width: '400px' }}>\r\n                                <Select.Option value=\"02020103\">智能防盗型保护接地箱（直立式）无监测(02020103)</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"方案名称\" name=\"bom_name\" className=\"form-item\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        headStyle={{ fontWeight: 'bold', padding: 0 }}\r\n                        bodyStyle={{ padding: 0 }}\r\n                        bordered={false}\r\n                    >\r\n                        <Table bordered columns={columns} dataSource={state} expandable={{ expandedRowRender }} />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx",["213","214","215","216","217","218"],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx",["219","220"],"import React, { FC, ReactElement, useReducer, useEffect, useState } from 'react'\r\nimport {\r\n    Tree,\r\n    Card,\r\n    Tooltip,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    Select,\r\n    Divider,\r\n    Empty,\r\n    Space,\r\n    Alert\r\n} from 'antd'\r\nimport { EditOutlined, UserOutlined } from '@ant-design/icons';\r\nimport './staff_management.less';\r\nimport { ACTION_TYPE, ITree, ITreeDataNode, ITreeNode } from './typings';\r\nimport { treeReducer } from './reducer';\r\nimport { getUsersList } from '../../api/staff'\r\n\r\nconst initialState: ITree = {\r\n    treeData: []\r\n};\r\n\r\nconst StaffManagement: FC = (): ReactElement => {\r\n    const [form] = Form.useForm()\r\n    const [isEditMode, setIsEditMode] = useState<boolean>(false)\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n\r\n    const handleChange = () => {\r\n        console.log(form.getFieldsValue())\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(treeReducer, initialState)\r\n\r\n    const onCheck = (checkedKeys: React.Key[]) => {\r\n        console.log('onCheck', checkedKeys);\r\n    };\r\n\r\n    const toggleIsEditMode = () => {\r\n        setIsEditMode(!isEditMode)\r\n    }\r\n\r\n    // 处理树结构返回数据\r\n    const handleTreeData = (treeData: ITreeDataNode[]): ITreeNode[] => {\r\n        let result = []\r\n        treeData.forEach((item1) => {\r\n            let children = []\r\n            item1.Users.forEach((item2) => {\r\n                children.push({\r\n                    title: item2.Name,\r\n                    key: 'u_' + item2.Id,\r\n                    id: item2.Id,\r\n                    icon: <UserOutlined />\r\n                })\r\n            })\r\n            result.push({\r\n                title: item1.Department,\r\n                key: 'd_' + item1.DepartId,\r\n                children: children\r\n            })\r\n        })\r\n        return result\r\n    }\r\n\r\n    useEffect(() => {\r\n        let result = []\r\n        getUsersList().then((res: any) => {\r\n            console.log(res)\r\n            if (res.code === 200) {\r\n                let result = handleTreeData(res.data)\r\n                dispatch({\r\n                    type: ACTION_TYPE.GET_TREE,\r\n                    payload: result\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"staff-manage-page\">\r\n            <div className=\"tree-slider\">\r\n                <Card\r\n                    title=\"员工列表\"\r\n                    extra={<Tooltip title=\"编辑模式\" color=\"#40a9ff\"><Button icon={<EditOutlined />} onClick={toggleIsEditMode} type=\"primary\" shape=\"round\" size=\"small\">{isEditMode ? '退出编辑' : '编辑模式'}</Button></Tooltip>}\r\n                    headStyle={{ padding: '0 20px' }}\r\n                    bodyStyle={{ padding: '0' }}\r\n                >\r\n                    <div className=\"search-box\">\r\n                        <Input placeholder=\"请输入员工姓名或工号\" />\r\n                    </div>\r\n                    {\r\n                        isEditMode ?\r\n                            <div className=\"edit-box\">\r\n                                <Space>\r\n                                    <Button size=\"small\" type=\"primary\">添加</Button>\r\n                                    <Button size=\"small\" type=\"primary\" danger>删除</Button>\r\n                                </Space>\r\n                            </div>\r\n                            :\r\n                            null\r\n                    }\r\n\r\n                    <div className=\"tree-box\">\r\n                        {\r\n                            state.treeData.length > 0\r\n                                ?\r\n                                <Tree\r\n                                    checkable={isEditMode}\r\n                                    showLine={{ showLeafIcon: false }}\r\n                                    showIcon={!isEditMode}\r\n                                    defaultExpandAll={true}\r\n                                    onSelect={onSelect}\r\n                                    treeData={state.treeData}\r\n                                    onCheck={onCheck}\r\n                                />\r\n                                :\r\n                                <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <div className=\"staff-info\">\r\n                <Card\r\n                    title=\"员工信息\"\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleChange}>保存修改</Button>}\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"员工姓名\"\r\n                            name=\"staff-name\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入姓名\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"员工岗位\"\r\n                            name=\"staff-station\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '250px' }}\r\n                                placeholder=\"请选择岗位\"\r\n                            >\r\n                                <Select.Option value=\"1\">岗位1</Select.Option>\r\n                                <Select.Option value=\"2\">岗位2</Select.Option>\r\n                                <Select.Option value=\"3\">岗位3</Select.Option>\r\n                                <Select.Option value=\"4\">岗位4</Select.Option>\r\n                                <Select.Option value=\"5\">岗位5</Select.Option>\r\n                                <Select.Option value=\"6\">岗位6</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">可选分配账号</Divider>\r\n                        <Form.Item\r\n                            label=\"员工账号\"\r\n                            name=\"staff-account\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入账号\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"账号密码\"\r\n                            name=\"staff-password\"\r\n                        >\r\n                            <Input.Password style={{ width: '200px' }} placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">权限分配</Divider>\r\n                        <Form.Item\r\n                            label=\"权限选择\"\r\n                            name=\"staff-authority\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '500px' }}\r\n                                placeholder=\"请选择此角色拥有权限\"\r\n                            >\r\n                                <Select.Option value=\"1\">权限1</Select.Option>\r\n                                <Select.Option value=\"2\">权限2</Select.Option>\r\n                                <Select.Option value=\"3\">权限3</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StaffManagement;","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx",["221","222"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Space,\r\n    Form,\r\n    Select,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport './process_configuration.less'\r\n\r\nexport default function ProcessConfiguration(props) {\r\n    const columns = [\r\n        { title: '方案名称', dataIndex: 'plan_name', key: 'plan_name' },\r\n        { title: '设备类型', dataIndex: 'device_type', key: 'device_type' },\r\n        { title: '生产工单模板', dataIndex: 'module_s', key: 'module_s' },\r\n        { title: '质检工单模板', dataIndex: 'module_z', key: 'module_z' },\r\n        { title: '仓库工单模板', dataIndex: 'module_c', key: 'module_C' },\r\n        { title: 'bom模板', dataIndex: 'bom', key: 'bom' },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button size=\"small\" shape=\"round\" type=\"primary\">编辑</Button>\r\n                    <Button size=\"small\" shape=\"round\" type=\"default\">预览</Button>\r\n                    <Button size=\"small\" shape=\"round\" danger type=\"primary\">删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    const dataSource = [\r\n        {\r\n            key: 1,\r\n            plan_name: '综合方案一',\r\n            device_type: '接地箱',\r\n            module_s: '生产方案一',\r\n            module_z: '质检方案一',\r\n            module_c: '仓库方案一',\r\n            bom: 'bom方案一'\r\n        },\r\n        {\r\n            key: 2,\r\n            plan_name: '综合方案二',\r\n            device_type: '接地箱',\r\n            module_s: '生产方案二',\r\n            module_z: '质检方案二',\r\n            module_c: '仓库方案二',\r\n            bom: 'bom方案二'\r\n        },\r\n    ]\r\n\r\n\r\n    const handleAdd = () => {\r\n        props.history.push('/' + 'my-userid' + '/pc/add')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">综合方案列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n\r\n                <Card\r\n                    title=\"综合方案\"\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\" onClick={handleAdd}>创建新方案</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"选择设备类型\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Card\r\n                        title=\"方案列表\"\r\n                        bodyStyle={{ padding: 0 }}\r\n                        bordered={false}\r\n                        headStyle={{ padding: 0, fontWeight: 'bold' }}\r\n                    >\r\n                        <Table bordered columns={columns} dataSource={dataSource}></Table>\r\n                    </Card>\r\n\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx",["223","224"],"import React, { useEffect } from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox,\r\n    message\r\n} from 'antd'\r\nimport { encryptAES, decryptAES } from '../../tools/aes'\r\nimport './login.less'\r\nimport { login } from '../../api/login'\r\n\r\ninterface UserInfo {\r\n    account: string | undefined;\r\n    password: string | undefined;\r\n    remember: boolean;\r\n}\r\n\r\nexport default function Login(props: any) {\r\n    const handleLogin = (values: UserInfo) => {\r\n        let { account, password, remember } = values;\r\n        if (remember) {\r\n            localStorage.setItem('user', encryptAES(JSON.stringify({ ac: account, pwd: password })))\r\n        }\r\n        login({ ac: account, pwd: encryptAES(password) }).then((res: any) => {\r\n            console.log(res)\r\n            if (res.bRes) {\r\n                localStorage.setItem('key', encryptAES(res.Ticket))\r\n                props.history.push('/')\r\n            } else {\r\n                message.error('login error!');\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('user')) {\r\n            const { ac, pwd } = decryptAES(localStorage.getItem('user'))\r\n            login({ ac, pwd }).then((res: any) => {\r\n                if (res.bRes) {\r\n                    localStorage.setItem('key', encryptAES(res.Ticket))\r\n                    props.history.push('/')\r\n                } else {\r\n                    message.error('login error!');\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <h1 className=\"login-title\">新图维追溯管理系统</h1>\r\n                <Form className=\"login-form\" onFinish={handleLogin} initialValues={{ ['remember']: false }}>\r\n                    <Form.Item name=\"account\" style={{ paddingBottom: '0px' }}>\r\n                        <Input\r\n                            addonBefore=\"账号\"\r\n                            allowClear\r\n                            placeholder=\"请输入账号\"\r\n                            className=\"first-input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\" style={{ paddingTop: '0px' }}>\r\n                        <Input.Password\r\n                            addonBefore=\"密码\"\r\n                            placeholder=\"请输入密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>记住我</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button block type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx",["225","226","227","228","229"],"D:\\fuzzy work\\mes_web\\src\\api\\login.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\aes.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\staff.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\product.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\reducer.ts",["230"],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\index.tsx",["231"],"import React, { useRef, useReducer } from 'react'\r\nimport {\r\n    Form,\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Select,\r\n    Table,\r\n    Input,\r\n    Divider,\r\n    Breadcrumb,\r\n    message\r\n} from 'antd'\r\nimport {\r\n    FolderOpenOutlined\r\n} from '@ant-design/icons'\r\nimport './part_configuration_add.less'\r\nimport XLSX from 'xlsx'\r\nimport { getDataSource } from '../../../../tools/index'\r\nimport { dataSourceReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function PartConfigurationAdd(props) {\r\n    const [form] = Form.useForm()\r\n    const inputRef = useRef(null)\r\n    const [state, dispatch] = useReducer(dataSourceReducer, [])\r\n\r\n    const columns = [\r\n        { title: '母件编码 *(cpspcode)H', dataIndex: 'bom_a', key: 'bom_a', width: 100 },\r\n        { title: '母件名称 *(cinvname)H', dataIndex: 'bom_b', key: 'bom_b', width: 100 },\r\n        { title: '规格型号(cinvstd)H', dataIndex: 'bom_c', key: 'bom_c', width: 100 },\r\n        { title: '是否展开(bexpand)H', dataIndex: 'bom_d', key: 'bom_d', width: 100 },\r\n        { title: '部门名称(cdepname)H', dataIndex: 'bom_e', key: 'bom_e', width: 100 },\r\n        { title: '部门编码(cdepcode)H', dataIndex: 'bom_f', key: 'bom_f', width: 100 },\r\n        { title: '默认成本BOM(bmrcbbom)H', dataIndex: 'bom_g', key: 'bom_g', width: 100 },\r\n        { title: '版本号(csocode)H', dataIndex: 'bom_h', key: 'bom_h', width: 100 },\r\n        { title: '备注(cmemo)H', dataIndex: 'bom_i', key: 'bom_i', width: 100 },\r\n        { title: '子件编码(cpscode)', dataIndex: 'bom_j', key: 'bom_j', width: 100 },\r\n        { title: '子件名称(cinvname)', dataIndex: 'bom_k', key: 'bom_k', width: 100 },\r\n        { title: '规格型号(cinvstd)', dataIndex: 'bom_l', key: 'bom_l', width: 150 },\r\n        { title: '版本号(csocode)', dataIndex: 'bom_m', key: 'bom_m', width: 100 },\r\n        { title: '主计量(ccomunitname)', dataIndex: 'bom_n', key: 'bom_n', width: 100 },\r\n        { title: '基本用量分子(ipsquantity)', dataIndex: 'bom_o', key: 'bom_o', width: 200 },\r\n        { title: '基本用量分母(tdqtyd)', dataIndex: 'bom_p', key: 'bom_p', width: 200 },\r\n        { title: '标准单价(fbzdj)', dataIndex: 'bom_q', key: 'bom_q', width: 150 },\r\n        { title: '标准物料成本(fbzwlcb)', dataIndex: 'bom_r', key: 'bom_r', width: 200 },\r\n        { title: '损耗率%(iwasterate)', dataIndex: 'bom_s', key: 'bom_s', width: 100 },\r\n        { title: '存放仓库(cwhname)', dataIndex: 'bom_t', key: 'bom_t', width: 100 },\r\n        { title: '库管员(cpersonname)', dataIndex: 'bom_u', key: 'bom_u', width: 100 },\r\n        { title: '用料车间(usedept)', dataIndex: 'bom_v', key: 'bom_v', width: 100 },\r\n        { title: '物料类型(wiptype)', dataIndex: 'bom_w', key: 'bom_w', width: 100 },\r\n        { title: '替代标示(replaceflag)', dataIndex: 'bom_x', key: 'bom_x', width: 100 },\r\n        { title: '图片(ginvpicture)', dataIndex: 'bom_y', key: 'bom_y', width: 100 },\r\n    ]\r\n\r\n    const handleSave = () => {\r\n\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        inputRef.current.dispatchEvent(new MouseEvent('click', { bubbles: true }));\r\n    }\r\n\r\n    const handleChange = () => {\r\n        let file = inputRef.current.files[0]\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            var data = e.target.result;\r\n            var workbook = XLSX.read(data, { type: 'binary' });\r\n            var worksheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            var json = XLSX.utils.sheet_to_json(worksheet);\r\n            let payload = getDataSource(json)\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_DATA_SOURCE,\r\n                payload\r\n            })\r\n            message.success('数据导入成功！')\r\n        };\r\n        if (file) {\r\n            reader.readAsBinaryString(file);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>零件 BOM 列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">BOM 方案编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"BOM 方案编辑\"\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button shape=\"round\" type=\"default\" icon={<FolderOpenOutlined />} onClick={handleAdd}>导入方案</Button>\r\n                            <input type=\"file\" id=\"file\" name=\"file\" accept=\".XLS\" onChange={handleChange} ref={inputRef} style={{ display: 'none' }} />\r\n                            <Button shape=\"round\" type=\"primary\" onClick={handleSave}>保存修改</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form form={form} layout=\"inline\">\r\n                        <Form.Item label=\"BOM 方案名称\" name=\"bom_name\" className=\"form-item\" style={{ width: '450px' }}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table bordered scroll={{ x: 2900 }} columns={columns} dataSource={state} />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\partConfigurationAdd\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\api\\integratedconfig.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx",["232","233"],"import {\r\n    Space,\r\n    Breadcrumb,\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Select,\r\n    Input,\r\n    Divider,\r\n    Table\r\n} from 'antd'\r\nimport './form_configuration.less'\r\nimport { getMouldList } from '../../../api/integratedconfig'\r\nimport { useEffect, useReducer } from 'react'\r\nimport { mouldListReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\n\r\nexport default function FormConfiguration(props) {\r\n    const [form] = Form.useForm()\r\n\r\n    const [state, dispatch] = useReducer(mouldListReducer, [])\r\n\r\n    const handleAdd = () => {\r\n        props.history.push('/' + 'my-userid' + '/fc/add')\r\n    }\r\n\r\n    const columns = [\r\n        { title: '模板名称', dataIndex: 'mouldName', key: 'mouldName' },\r\n        { title: '模板ID', dataIndex: 'typeId', key: 'typeId' },\r\n        { title: '岗位', dataIndex: 'position', key: 'position' },\r\n        { title: '设备类型', dataIndex: 'deviceType', key: 'deviceType' },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button type=\"primary\" shape=\"round\">编辑</Button>\r\n                    <Button type=\"primary\" shape=\"round\" danger>删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n\r\n    const handleSearch = () => {\r\n\r\n    }\r\n\r\n    const expandedRowRender = (e) => {\r\n        console.log(e)\r\n        return <div>1</div>\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMouldList().then((res: any) => {\r\n            if (res.code === 200) {\r\n                let payload = res.data.map((item) => ({\r\n                    ...item,\r\n                    key: item.typeId\r\n                }))\r\n                dispatch({\r\n                    type: ACTION_TYPE.SET_DATA_SOURCE,\r\n                    payload: payload\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">工单模板列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"工单模板列表\"\r\n                    extra={\r\n                        <Space size={16}>\r\n                            {/* <Button shape=\"round\" type=\"default\" icon={<FolderOpenOutlined />}>导入方案</Button> */}\r\n                            <Button shape=\"round\" type=\"primary\" onClick={handleAdd}>添加模板</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form form={form} layout=\"inline\" onFinish={handleSearch}>\r\n                        <Form.Item label=\"设备类型\" name=\"device_type\" className=\"form-item\">\r\n                            <Select style={{ width: '400px' }}>\r\n                                <Select.Option value=\"02020103\">智能防盗型保护接地箱（直立式）无监测(02020103)</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"方案名称\" name=\"bom_name\" className=\"form-item\">\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        headStyle={{ fontWeight: 'bold', padding: 0 }}\r\n                        bodyStyle={{ padding: 0 }}\r\n                        bordered={false}\r\n                    >\r\n                        <Table bordered columns={columns} dataSource={state} expandable={{ expandedRowRender }} />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\index.tsx",["234","235","236","237","238"],"import React, { useEffect, useMemo, useReducer, useState } from 'react'\r\nimport {\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Switch,\r\n    Table,\r\n    message,\r\n    Popconfirm,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc'\r\nimport arrayMove from 'array-move';\r\nimport './form_configuration.less'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport {\r\n    PreviewForm\r\n} from '../../../../components'\r\nimport { formOptionsReducer } from './reducer'\r\nimport { ACTION_TYPE } from './typings'\r\nimport { fromJS } from 'immutable'\r\nimport { addMould } from '../../../../api/integratedconfig'\r\n\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableList = SortableContainer(props => <tbody {...props} />);\r\n\r\nexport default function FormConfigurationAdd(props) {\r\n\r\n    const DragHandle = SortableHandle(() => (\r\n        <MenuOutlined style={{ cursor: 'pointer', color: '#999' }} />\r\n    ));\r\n\r\n    const columns = [\r\n        { dataIndex: 'sort', width: 50, className: 'drag-visible', render: () => <DragHandle /> },\r\n        { title: '工单子项名称', dataIndex: 'item_name', className: 'drag-visible', },\r\n        {\r\n            title: '操作', width: 150, render: (text, record) => (\r\n                <Space size={16}>\r\n                    <Button type=\"default\" size=\"small\" shape=\"round\" onClick={handleEditFormProps.bind(null, record)}>编辑</Button>\r\n                    <Popconfirm\r\n                        placement=\"right\"\r\n                        title=\"确定要删除该项？\"\r\n                        onConfirm={handleDeleteFormProps.bind(null, record)}\r\n                        okText=\"确定\"\r\n                        cancelText=\"取消\"\r\n                    >\r\n                        <Button type=\"primary\" size=\"small\" shape=\"round\" danger>删除</Button>\r\n                    </Popconfirm>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    // reducer\r\n    const [state, dispatch] = useReducer(formOptionsReducer, fromJS({\r\n        basicOptions: {},\r\n        formProps: [],\r\n        formPropsIndex: 0\r\n    }))\r\n\r\n    console.log(state.toJS())\r\n\r\n    const [form1] = Form.useForm()\r\n    const [form2] = Form.useForm()\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMove([].concat(state.get(\"formProps\")), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_FORM_PROPS,\r\n                payload: newData\r\n            })\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = state.get(\"formProps\").findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableList\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    const handleEditFormProps = () => {\r\n\r\n    }\r\n\r\n    const handleDeleteFormProps = (e) => {\r\n        dispatch({\r\n            type: ACTION_TYPE.DELETE_FORM_PROP,\r\n            payload: e\r\n        })\r\n        message.info('工单项已删除！')\r\n    }\r\n\r\n    // 工单基本配置提交\r\n    const handleSaveOptions = () => {\r\n        let { form_name, form_abbreviation, belong_work, belong_step } = form1.getFieldsValue()\r\n        dispatch({\r\n            type: ACTION_TYPE.SET_BASIC_OPTIONS,\r\n            payload: {\r\n                form_name,\r\n                form_abbreviation,\r\n                belong_work,\r\n                belong_step\r\n            }\r\n        })\r\n    }\r\n\r\n    // 添加工单子项提交\r\n    const handleAddItem = () => {\r\n        const {\r\n            item_name,\r\n            item_submit_type,\r\n            item_is_required,\r\n            item_is_readonly,\r\n            item_span\r\n        } = form2.getFieldsValue()\r\n        if (item_name && item_submit_type && item_span) {\r\n            dispatch({\r\n                type: ACTION_TYPE.SET_FORM_PROPS,\r\n                payload: [\r\n                    ...state.get(\"formProps\"),\r\n                    {\r\n                        item_name,\r\n                        item_submit_type,\r\n                        item_is_required,\r\n                        item_is_readonly,\r\n                        item_span,\r\n                        key: state.get(\"formPropsIndex\"),\r\n                        index: state.get(\"formPropsIndex\")\r\n                    }\r\n                ]\r\n            })\r\n            dispatch({\r\n                type: ACTION_TYPE.ADD_FORM_PROPS_INDEX\r\n            })\r\n        } else {\r\n            message.warning(\"必要信息未填！\")\r\n        }\r\n\r\n    }\r\n\r\n    const handleSaveFormModel = () => {\r\n        addMould(JSON.stringify(state)).then((res: any) => {\r\n            if (res.code === 200) {\r\n                message.success(res.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>工单模板列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">工单配置</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"工单配置\"\r\n                    bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleSaveFormModel}>提交保存</Button>}\r\n                >\r\n                    <Row gutter={16}>\r\n                        <Col span={12}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"工单基本配置\"\r\n                                    bodyStyle={{ padding: '12px 20px' }}\r\n                                    extra={<Button type='primary' shape=\"round\" onClick={handleSaveOptions}>提交保存</Button>}\r\n                                >\r\n                                    <Form\r\n                                        layout=\"inline\"\r\n                                        form={form1}\r\n                                    >\r\n                                        <Form.Item label=\"工单名称\" name=\"form_name\">\r\n                                            <Input placeholder=\"请输入工单名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"所属岗位\" name=\"belong_work\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"1\">1</Select.Option>\r\n                                                <Select.Option value=\"2\">2</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"所属设备类型\" name=\"device_type\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"1\">1</Select.Option>\r\n                                                <Select.Option value=\"2\">2</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"新增工单子项\"\r\n                                    bodyStyle={{ padding: '12px 20px' }}\r\n                                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleAddItem}>添加子项</Button>}\r\n                                >\r\n                                    <Form\r\n                                        form={form2}\r\n                                        layout=\"inline\"\r\n                                        initialValues={{\r\n                                            ['item_is_required']: true,\r\n                                            ['item_is_readonly']: false\r\n                                        }}\r\n                                    >\r\n                                        <Form.Item label=\"工单子项名称\" name=\"item_name\">\r\n                                            <Input placeholder=\"请输入工单子项名称\" />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"工单子项输入形式\" name=\"item_submit_type\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"input\">文字输入</Select.Option>\r\n                                                <Select.Option value=\"select\">下拉选择</Select.Option>\r\n                                                <Select.Option value=\"upload\">图片上传</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"是否必填\" name=\"item_is_required\" valuePropName=\"checked\">\r\n                                            <Switch />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"是否只读\" name=\"item_is_readonly\" valuePropName=\"checked\">\r\n                                            <Switch />\r\n                                        </Form.Item>\r\n                                        <Form.Item label=\"子项所占行距\" name=\"item_span\">\r\n                                            <Select style={{ width: '200px' }}>\r\n                                                <Select.Option value=\"8\">1/3 行</Select.Option>\r\n                                                <Select.Option value=\"12\">1/2 行</Select.Option>\r\n                                                <Select.Option value=\"24\">1 行</Select.Option>\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Card>\r\n                                <Card\r\n                                    title=\"工单子项列表\"\r\n                                    bodyStyle={{ padding: '0' }}\r\n                                >\r\n                                    <Table\r\n                                        pagination={false}\r\n                                        columns={columns}\r\n                                        dataSource={state.toJS().formProps}\r\n                                        rowKey=\"index\"\r\n                                        bordered\r\n                                        components={{\r\n                                            body: {\r\n                                                wrapper: DraggableContainer,\r\n                                                row: DraggableBodyRow,\r\n                                            },\r\n                                        }}\r\n                                    />\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                                <Card\r\n                                    title=\"工单预览\"\r\n                                    bodyStyle={{ padding: '0 25px 25px 25px' }}\r\n                                >\r\n                                    <PreviewForm basicOptions={state.toJS().basicOptions} formItemProps={state.toJS().formProps} />\r\n                                </Card>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\formConfigurationAdd\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\processConfigurationAdd\\index.tsx",["239"],"import React, { FC } from 'react'\r\nimport {\r\n    Space,\r\n    Breadcrumb,\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Select\r\n} from 'antd'\r\nimport './process_configuration_add.less'\r\n\r\nconst processConfigurationAdd = (props) => {\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>综合方案列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">方案编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n\r\n                <Card\r\n                    title=\"方案编辑\"\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form>\r\n                        <Form.Item label=\"设备类型\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"BOM方案\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"生产工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"质检工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"仓库工单模板\">\r\n                            <Select style={{ width: '250px' }}>\r\n                                <Select.Option value=\"1\">1</Select.Option>\r\n                                <Select.Option value=\"2\">2</Select.Option>\r\n                            </Select>\r\n                            <Button className=\"preview_btn\" type=\"primary\" shape=\"round\" size=\"small\">预览</Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default processConfigurationAdd","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\index.tsx",["240"],"import {\r\n    Card,\r\n    Form,\r\n    DatePicker,\r\n    Input,\r\n    Select,\r\n    Button,\r\n    Divider,\r\n    Space,\r\n    Table,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport {\r\n    FilterTwoTone\r\n} from '@ant-design/icons'\r\nimport moment from 'moment'\r\nimport React from 'react'\r\nimport './check_form.less'\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nconst CheckFormData = [\r\n    { key: '1', check_form_id: 123456, order_number: 'GD202001060001', device_ID: '02020103', device_type: '智能防盗型保护接地箱（直立式）无监测', device_count: 10, response_man: '张三', post_time: '2021-03-11', check_man: '李四', check_time: \"2020-03-12\", status: '已送检' },\r\n    { key: '2', check_form_id: 123455, order_number: 'GD202001060001', device_ID: '02020103', device_type: '智能防盗型保护接地箱（直立式）无监测', device_count: 10, response_man: '张三', post_time: '2021-03-12', check_man: '李四', check_time: \"2020-03-12\", status: '待确认' }\r\n]\r\n\r\nconst CheckForm = (props) => {\r\n    const columns = [\r\n        { title: '送检单ID', dataIndex: 'check_form_id', key: 'check_form_id', width: 100 },\r\n        { title: '生产订单号', dataIndex: 'order_number', key: 'order_number', width: 150 },\r\n        { title: '产品料号', dataIndex: 'device_ID', key: 'device_ID', width: 100 },\r\n        { title: '产品类型', dataIndex: 'device_type', key: 'device_type', width: 300 },\r\n        { title: '产品数量', dataIndex: 'device_count', key: 'device_count', width: 100 },\r\n        { title: '生产人员', dataIndex: 'response_man', key: 'response_man', width: 100 },\r\n        { title: '上传时间', dataIndex: 'post_time', key: 'post_time', width: 150 },\r\n        { title: '确认人员', dataIndex: 'check_man', man: 'check_man', width: 100 },\r\n        { title: '确认时间', dataIndex: 'check_time', key: 'check_time', width: 150 },\r\n        {\r\n            title: '状态', dataIndex: 'status', key: 'status', filters: [\r\n                {\r\n                    text: '已送检',\r\n                    value: '已送检',\r\n                },\r\n                {\r\n                    text: '待确认',\r\n                    value: '待确认',\r\n                },\r\n            ],\r\n            filterMultiple: false,\r\n            filterIcon: <FilterTwoTone style={{ fontSize: '15px' }} />,\r\n            onFilter: (value, record) => record.status === value,\r\n            width: 100,\r\n            fixed: 'right' as 'right',\r\n            render: (text, record) => {\r\n                return (\r\n                    <div style={record.status === '已送检' ? { color: \"green\" } : { color: \"red\" }}>{record.status}</div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: '操作', width: 100, fixed: 'right' as 'right', render: (text, record) => {\r\n                return (\r\n                    <Button type=\"primary\" size=\"small\" shape=\"round\" onClick={handleCheck.bind(null, record)}>查看</Button>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    const handleCheck = (record) => {\r\n        props.history.push(`/:userID/cf/check/${record.check_form_id}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">送检单台账</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card title=\"送检单台账\" headStyle={{ fontWeight: 'bold' }}>\r\n                    <Form layout=\"inline\">\r\n                        <Form.Item label=\"生产订单编号\" name=\"order_num\">\r\n                            <Input placeholder=\"请输入生产订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单时间\" name=\"order_time\">\r\n                            <RangePicker\r\n                                ranges={{\r\n                                    '今天': [moment(), moment()],\r\n                                    '本月': [moment().startOf('month'), moment().endOf('month')],\r\n                                }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table scroll={{ x: 1450 }} bordered columns={columns} dataSource={CheckFormData}></Table>\r\n                </Card>\r\n\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckForm","D:\\fuzzy work\\mes_web\\src\\views\\todoThings\\checkForm\\checkForm_detail\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\typings.ts",[],{"ruleId":"241","severity":1,"message":"242","line":4,"column":47,"nodeType":"243","messageId":"244","endLine":4,"endColumn":55},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"241","severity":1,"message":"249","line":9,"column":19,"nodeType":"243","messageId":"244","endLine":9,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":24,"column":18,"nodeType":"252","messageId":"253","endLine":24,"endColumn":20},{"ruleId":"241","severity":1,"message":"254","line":1,"column":58,"nodeType":"243","messageId":"244","endLine":1,"endColumn":66},{"ruleId":"255","severity":1,"message":"256","line":63,"column":32,"nodeType":"257","messageId":"258","endLine":63,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":63,"column":46,"nodeType":"257","messageId":"258","endLine":63,"endColumn":47},{"ruleId":"255","severity":1,"message":"256","line":69,"column":36,"nodeType":"257","messageId":"258","endLine":69,"endColumn":37},{"ruleId":"255","severity":1,"message":"256","line":69,"column":50,"nodeType":"257","messageId":"258","endLine":69,"endColumn":51},{"ruleId":"241","severity":1,"message":"259","line":15,"column":5,"nodeType":"243","messageId":"244","endLine":15,"endColumn":23},{"ruleId":"255","severity":1,"message":"256","line":74,"column":32,"nodeType":"257","messageId":"258","endLine":74,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":74,"column":46,"nodeType":"257","messageId":"258","endLine":74,"endColumn":47},{"ruleId":"241","severity":1,"message":"254","line":1,"column":40,"nodeType":"243","messageId":"244","endLine":1,"endColumn":48},{"ruleId":"241","severity":1,"message":"260","line":8,"column":5,"nodeType":"243","messageId":"244","endLine":8,"endColumn":16},{"ruleId":"255","severity":1,"message":"256","line":68,"column":32,"nodeType":"257","messageId":"258","endLine":68,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":68,"column":46,"nodeType":"257","messageId":"258","endLine":68,"endColumn":47},{"ruleId":"261","severity":1,"message":"262","line":143,"column":8,"nodeType":"263","endLine":143,"endColumn":10,"suggestions":"264"},{"ruleId":"261","severity":1,"message":"265","line":175,"column":8,"nodeType":"263","endLine":175,"endColumn":37,"suggestions":"266"},{"ruleId":"241","severity":1,"message":"267","line":13,"column":5,"nodeType":"243","messageId":"244","endLine":13,"endColumn":10},{"ruleId":"241","severity":1,"message":"268","line":70,"column":13,"nodeType":"243","messageId":"244","endLine":70,"endColumn":19},{"ruleId":"255","severity":1,"message":"256","line":55,"column":32,"nodeType":"257","messageId":"258","endLine":55,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":55,"column":46,"nodeType":"257","messageId":"258","endLine":55,"endColumn":47},{"ruleId":"261","severity":1,"message":"269","line":48,"column":8,"nodeType":"263","endLine":48,"endColumn":10,"suggestions":"270"},{"ruleId":"271","severity":1,"message":"272","line":54,"column":86,"nodeType":"273","messageId":"274","endLine":54,"endColumn":105,"fix":"275"},{"ruleId":"241","severity":1,"message":"276","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":26},{"ruleId":"241","severity":1,"message":"277","line":12,"column":5,"nodeType":"243","messageId":"244","endLine":12,"endColumn":10},{"ruleId":"241","severity":1,"message":"278","line":13,"column":5,"nodeType":"243","messageId":"244","endLine":13,"endColumn":9},{"ruleId":"241","severity":1,"message":"279","line":26,"column":24,"nodeType":"243","messageId":"244","endLine":26,"endColumn":32},{"ruleId":"241","severity":1,"message":"280","line":122,"column":11,"nodeType":"243","messageId":"244","endLine":122,"endColumn":30},{"ruleId":"241","severity":1,"message":"281","line":1,"column":31,"nodeType":"243","messageId":"244","endLine":1,"endColumn":40},{"ruleId":"241","severity":1,"message":"282","line":7,"column":5,"nodeType":"243","messageId":"244","endLine":7,"endColumn":11},{"ruleId":"255","severity":1,"message":"256","line":24,"column":32,"nodeType":"257","messageId":"258","endLine":24,"endColumn":33},{"ruleId":"255","severity":1,"message":"256","line":24,"column":46,"nodeType":"257","messageId":"258","endLine":24,"endColumn":47},{"ruleId":"241","severity":1,"message":"283","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":26},{"ruleId":"241","severity":1,"message":"284","line":1,"column":28,"nodeType":"243","messageId":"244","endLine":1,"endColumn":35},{"ruleId":"241","severity":1,"message":"254","line":1,"column":49,"nodeType":"243","messageId":"244","endLine":1,"endColumn":57},{"ruleId":"271","severity":1,"message":"285","line":223,"column":45,"nodeType":"273","messageId":"274","endLine":223,"endColumn":71,"fix":"286"},{"ruleId":"271","severity":1,"message":"287","line":224,"column":45,"nodeType":"273","messageId":"274","endLine":224,"endColumn":72,"fix":"288"},{"ruleId":"241","severity":1,"message":"289","line":1,"column":17,"nodeType":"243","messageId":"244","endLine":1,"endColumn":19},{"ruleId":"241","severity":1,"message":"282","line":6,"column":5,"nodeType":"243","messageId":"244","endLine":6,"endColumn":11},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["290"],"no-negated-in-lhs",["291"],"'setIsLogin' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'FolderOpenOutlined' is defined but never used.","'InputNumber' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.","ArrayExpression",["292"],"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.",["293"],"'Alert' is defined but never used.","'result' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["294"],"no-useless-computed-key","Unnecessarily computed property ['remember'] found.","Property","unnecessarilyComputedProperty",{"range":"295","text":"296"},"'ReactNode' is defined but never used.","'Table' is defined but never used.","'List' is defined but never used.","'isIFrame' is defined but never used.","'customizeSelectNode' is assigned a value but never used.","'MODE_TYPE' is defined but never used.","'Select' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","Unnecessarily computed property ['item_is_required'] found.",{"range":"297","text":"298"},"Unnecessarily computed property ['item_is_readonly'] found.",{"range":"299","text":"300"},"'FC' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},[1739,1751],"'remember'",[8580,8600],"'item_is_required'",[8653,8673],"'item_is_readonly'","Update the dependencies array to be: [props.location.search]",{"range":"307","text":"308"},"Update the dependencies array to be: [_state.orderId, _state.mode, form]",{"range":"309","text":"310"},"Update the dependencies array to be: [props.history]",{"range":"311","text":"312"},[4827,4829],"[props.location.search]",[6169,6198],"[_state.orderId, _state.mode, form]",[1494,1496],"[props.history]"]