[{"D:\\fuzzy work\\mes_web\\src\\index.tsx":"1","D:\\fuzzy work\\mes_web\\src\\App.tsx":"2","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts":"3","D:\\fuzzy work\\mes_web\\src\\components\\index.ts":"4","D:\\fuzzy work\\mes_web\\src\\tools\\index.ts":"5","D:\\fuzzy work\\mes_web\\src\\views\\index.ts":"6","D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx":"7","D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx":"8","D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx":"9","D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx":"10","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx":"11","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx":"12","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx":"13","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx":"14","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx":"15","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx":"16","D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx":"17","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts":"18","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts":"19","D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx":"20","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx":"21"},{"size":786,"mtime":1609119180528,"results":"22","hashOfConfig":"23"},{"size":1527,"mtime":1609126198090,"results":"24","hashOfConfig":"23"},{"size":2313,"mtime":1610603944145,"results":"25","hashOfConfig":"23"},{"size":146,"mtime":1609119180528,"results":"26","hashOfConfig":"23"},{"size":659,"mtime":1609216019352,"results":"27","hashOfConfig":"23"},{"size":1125,"mtime":1609212523313,"results":"28","hashOfConfig":"23"},{"size":4910,"mtime":1610616193781,"results":"29","hashOfConfig":"23"},{"size":3106,"mtime":1609119180520,"results":"30","hashOfConfig":"23"},{"size":258,"mtime":1609119180520,"results":"31","hashOfConfig":"23"},{"size":559,"mtime":1609119180538,"results":"32","hashOfConfig":"23"},{"size":6272,"mtime":1610616310953,"results":"33","hashOfConfig":"23"},{"size":2872,"mtime":1609310520615,"results":"34","hashOfConfig":"23"},{"size":5051,"mtime":1610607641026,"results":"35","hashOfConfig":"23"},{"size":6881,"mtime":1609137207432,"results":"36","hashOfConfig":"23"},{"size":3530,"mtime":1609119180538,"results":"37","hashOfConfig":"23"},{"size":2663,"mtime":1609119180528,"results":"38","hashOfConfig":"23"},{"size":1661,"mtime":1609119180538,"results":"39","hashOfConfig":"23"},{"size":379,"mtime":1609135713913,"results":"40","hashOfConfig":"23"},{"size":376,"mtime":1609136548438,"results":"41","hashOfConfig":"23"},{"size":9992,"mtime":1609212390353,"results":"42","hashOfConfig":"23"},{"size":12119,"mtime":1610612613671,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"12tl25p",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"89","usedDeprecatedRules":"47"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\fuzzy work\\mes_web\\src\\index.tsx",["92"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { mainRoutes } from './routes'\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            mainRoutes.map(route => (\r\n              <Route path={route.pathName} component={route.component} key={route.pathName} />\r\n            ))\r\n          }\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  </ConfigProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n",["93","94"],"D:\\fuzzy work\\mes_web\\src\\App.tsx",["95"],"import './App.less'\r\nimport { Frame, Loading } from './components';\r\nimport { Suspense, useState, FC, ReactElement } from 'react'\r\nimport { adminRoutes } from './routes'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { insertUserId } from './tools'\r\n\r\nconst App: FC = (): ReactElement => {\r\n  const [isLogin, setIsLogin] = useState<boolean>(true)\r\n  return (\r\n    isLogin\r\n      ?\r\n      <Frame>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => (\r\n                route.isSubMenu ?\r\n                  route.subMenu.map(subRoute => (\r\n                    <Route\r\n                      path={subRoute.pathName}\r\n                      key={subRoute.pathName}\r\n                      component={subRoute.component}\r\n                      exact={subRoute.exact}\r\n                    />\r\n                  ))\r\n                  :\r\n                  <Route\r\n                    path={route.pathName}\r\n                    key={route.pathName}\r\n                    component={route.component}\r\n                    exact={route.exact}\r\n                  />\r\n              ))\r\n            }\r\n            <Redirect\r\n              // you need insert userid here\r\n              to={insertUserId(adminRoutes[0].pathName, 'my-userid')}\r\n              from=\"/\"\r\n              exact />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Frame>\r\n      :\r\n      <Redirect to=\"/login\" />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","D:\\fuzzy work\\mes_web\\src\\routes\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\tools\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\index.ts",[],"D:\\fuzzy work\\mes_web\\src\\components\\Frame\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\PreviewForm\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\components\\Loading\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\notFound\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\index.tsx",["96","97","98"],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx",["99","100","101","102"],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\index.tsx",["103"],"import React, { FC, ReactElement, useReducer, useEffect, useState } from 'react'\r\nimport {\r\n    Tree,\r\n    Card,\r\n    Tooltip,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    Select,\r\n    Divider,\r\n    Empty\r\n} from 'antd'\r\nimport { FormOutlined, UserOutlined } from '@ant-design/icons';\r\nimport './staff_management.less';\r\nimport { ACTION_TYPE, ITree } from './typings';\r\nimport { treeReducer } from './reducer';\r\n\r\nconst initialState: ITree = {\r\n    treeData: []\r\n};\r\n\r\nconst StaffManagement: FC = (): ReactElement => {\r\n    const [form] = Form.useForm()\r\n\r\n    const onSelect = (selectedKeys, info) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n\r\n    const handleChange = () => {\r\n        console.log(form.getFieldsValue())\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(treeReducer, initialState)\r\n\r\n    useEffect(() => {\r\n        // TODO... get treeData here （result）\r\n        let result = [\r\n            {\r\n                title: '车间A',\r\n                key: '0-0',\r\n                children: [\r\n                    {\r\n                        title: '工人1',\r\n                        key: '0-0-0',\r\n                        id: 1,\r\n                        icon: <UserOutlined />\r\n                    },\r\n                    {\r\n                        title: '工人2',\r\n                        key: '0-0-1',\r\n                        id: 2,\r\n                        icon: <UserOutlined />\r\n                    }\r\n                ],\r\n            },\r\n            {\r\n                title: '车间B',\r\n                key: '0-1',\r\n                children: [\r\n                    {\r\n                        title: '工人3',\r\n                        key: '0-1-0',\r\n                        id: 4,\r\n                        icon: <UserOutlined />\r\n                    },\r\n                    {\r\n                        title: '工人4',\r\n                        key: '0-1-1',\r\n                        id: 5,\r\n                        icon: <UserOutlined />\r\n                    }\r\n                ],\r\n            }\r\n        ]\r\n\r\n        dispatch({\r\n            type: ACTION_TYPE.GET_TREE,\r\n            payload: result\r\n        })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"staff-manage-page\">\r\n            <div className=\"tree-slider\">\r\n                <Card\r\n                    title=\"员工列表\"\r\n                    extra={<Tooltip title=\"编辑员工列表\" color=\"#40a9ff\"><FormOutlined style={{ fontSize: '16px', cursor: 'pointer' }} /></Tooltip>}\r\n                    headStyle={{ textAlign: 'center' }}\r\n                    bodyStyle={{ padding: '0' }}\r\n                >\r\n                    <div className=\"search-box\">\r\n                        <Input placeholder=\"请输入员工姓名或工号\" />\r\n                    </div>\r\n                    <div className=\"tree-box\">\r\n                        {\r\n                            state.treeData.length > 0\r\n                                ?\r\n                                <Tree\r\n                                    showLine={{ showLeafIcon: false }}\r\n                                    showIcon={true}\r\n                                    defaultExpandAll={true}\r\n                                    onSelect={onSelect}\r\n                                    treeData={state.treeData}\r\n                                />\r\n                                :\r\n                                <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n                        }\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <div className=\"staff-info\">\r\n                <Card\r\n                    title=\"员工信息\"\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleChange}>保存修改</Button>}\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"员工姓名\"\r\n                            name=\"staff-name\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入姓名\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"员工岗位\"\r\n                            name=\"staff-station\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '250px' }}\r\n                                placeholder=\"请选择岗位\"\r\n                            >\r\n                                <Select.Option value=\"1\">岗位1</Select.Option>\r\n                                <Select.Option value=\"2\">岗位2</Select.Option>\r\n                                <Select.Option value=\"3\">岗位3</Select.Option>\r\n                                <Select.Option value=\"4\">岗位4</Select.Option>\r\n                                <Select.Option value=\"5\">岗位5</Select.Option>\r\n                                <Select.Option value=\"6\">岗位6</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">可选分配账号</Divider>\r\n                        <Form.Item\r\n                            label=\"员工账号\"\r\n                            name=\"staff-account\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入账号\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"账号密码\"\r\n                            name=\"staff-password\"\r\n                        >\r\n                            <Input.Password style={{ width: '200px' }} placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">权限分配</Divider>\r\n                        <Form.Item\r\n                            label=\"权限选择\"\r\n                            name=\"staff-authority\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '500px' }}\r\n                                placeholder=\"请选择此角色拥有权限\"\r\n                            >\r\n                                <Select.Option value=\"1\">权限1</Select.Option>\r\n                                <Select.Option value=\"2\">权限2</Select.Option>\r\n                                <Select.Option value=\"3\">权限3</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default StaffManagement;","D:\\fuzzy work\\mes_web\\src\\views\\ordersStandingBook\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx",[],"D:\\fuzzy work\\mes_web\\src\\views\\login\\index.tsx",["104"],"import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox\r\n} from 'antd'\r\nimport './login.less'\r\n\r\nexport default function Login(props: any) {\r\n    const handleLogin = (values: any) => {\r\n        console.log(values)\r\n        // need save userid here ...\r\n        props.history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <h1 className=\"login-title\">新图维追溯管理系统</h1>\r\n                <Form className=\"login-form\" onFinish={handleLogin} initialValues={{ ['remember']: false }}>\r\n                    <Form.Item name=\"account\" style={{ paddingBottom: '0px' }}>\r\n                        <Input\r\n                            addonBefore=\"账号\"\r\n                            allowClear\r\n                            placeholder=\"请输入账号\"\r\n                            className=\"first-input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\" style={{ paddingTop: '0px' }}>\r\n                        <Input.Password\r\n                            addonBefore=\"密码\"\r\n                            placeholder=\"请输入密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>记住我</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button block type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\reducer.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\staffManagement\\typings.ts",[],"D:\\fuzzy work\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.tsx",["105","106"],"import React, { useState } from 'react'\r\nimport {\r\n    Card,\r\n    Space,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Switch,\r\n    Table\r\n} from 'antd'\r\nimport { SortableContainer, SortableElement, SortableHandle } from 'react-sortable-hoc'\r\nimport arrayMove from 'array-move';\r\nimport './form_configuration.less'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport {\r\n    PreviewForm\r\n} from '../../../components'\r\n\r\nconst data = [\r\n    { key: 1, form_item_name: '表单子项1', index: 0 },\r\n    { key: 2, form_item_name: '表单子项2', index: 1 },\r\n    { key: 3, form_item_name: '表单子项3', index: 2 },\r\n]\r\n\r\nconst SortableItem = SortableElement(props => <tr {...props} />);\r\nconst SortableList = SortableContainer(props => <tbody {...props} />);\r\n\r\nexport default function FormConfiguration() {\r\n\r\n    const DragHandle = SortableHandle(() => (\r\n        <MenuOutlined style={{ cursor: 'pointer', color: '#999' }} />\r\n    ));\r\n\r\n    const columns = [\r\n        { dataIndex: 'sort', width: 50, className: 'drag-visible', render: () => <DragHandle /> },\r\n        { title: '表单子项名称', dataIndex: 'form_item_name', className: 'drag-visible', },\r\n        {\r\n            title: '操作', render: () => (\r\n                <Space size={16}>\r\n                    <Button type=\"default\" shape=\"round\">编辑</Button>\r\n                    <Button type=\"primary\" shape=\"round\" danger>删除</Button>\r\n                </Space>\r\n            )\r\n        },\r\n    ]\r\n\r\n    const [dataSource, setDataSource] = useState(data)\r\n    const [formItemProps, setFormItemProps] = useState([])\r\n    const [basicOptions, setBasicOptions] = useState({})\r\n\r\n    const [form1] = Form.useForm()\r\n    const [form2] = Form.useForm()\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        if (oldIndex !== newIndex) {\r\n            const newData = arrayMove([].concat(dataSource), oldIndex, newIndex).filter(el => !!el);\r\n            console.log('Sorted items: ', newData);\r\n            setDataSource(newData)\r\n        }\r\n    };\r\n\r\n    const DraggableBodyRow = ({ className, style, ...restProps }) => {\r\n        // function findIndex base on Table rowKey props and should always be a right array index\r\n        const index = dataSource.findIndex(x => x.index === restProps['data-row-key']);\r\n        return <SortableItem index={index} {...restProps} />;\r\n    };\r\n\r\n    const DraggableContainer = props => (\r\n        <SortableList\r\n            useDragHandle\r\n            helperClass=\"row-dragging\"\r\n            onSortEnd={onSortEnd}\r\n            {...props}\r\n        />\r\n    );\r\n\r\n    // 表单基本配置提交\r\n    const handleSaveOptions = () => {\r\n        console.log(form1.getFieldsValue())\r\n        let { form_name } = form1.getFieldsValue()\r\n        setBasicOptions({\r\n            ...basicOptions,\r\n            form_name\r\n        })\r\n    }\r\n\r\n    // 添加表单子项提交\r\n    const handleAddItem = () => {\r\n        console.log(form2.getFieldsValue())\r\n        const {\r\n            item_name,\r\n            item_submit_type,\r\n            item_is_required,\r\n            item_is_readonly,\r\n            item_span\r\n        } = form2.getFieldsValue()\r\n        setFormItemProps([\r\n            ...formItemProps,\r\n            {\r\n                item_name,\r\n                item_submit_type,\r\n                item_is_required,\r\n                item_is_readonly,\r\n                item_span\r\n            }\r\n        ])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card\r\n                title=\"表单配置\"\r\n                bodyStyle={{ padding: '2px 16px 14px 16px', background: '#fafafa' }}\r\n                extra={<Button type=\"primary\" shape=\"round\">提交保存</Button>}\r\n            >\r\n                <Row gutter={16}>\r\n                    <Col span={12}>\r\n                        <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                            <Card\r\n                                title=\"表单基本配置\"\r\n                                bodyStyle={{ padding: '12px 20px' }}\r\n                                extra={<Button type='primary' shape=\"round\" onClick={handleSaveOptions}>提交保存</Button>}\r\n                            >\r\n                                <Form\r\n                                    layout=\"inline\"\r\n                                    form={form1}\r\n                                >\r\n                                    <Form.Item label=\"表单名称\" name=\"form_name\">\r\n                                        <Input placeholder=\"请输入表单名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"所属岗位\" name=\"belong_work\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"1\">1</Select.Option>\r\n                                            <Select.Option value=\"2\">2</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"所属步骤\" name=\"belong_step\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"1\">1</Select.Option>\r\n                                            <Select.Option value=\"2\">2</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"表单简称\" name=\"form_abbreviation\">\r\n                                        <Input placeholder=\"请输入表单简称\" />\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Card>\r\n                            <Card\r\n                                title=\"新增表单子项\"\r\n                                bodyStyle={{ padding: '12px 20px' }}\r\n                                extra={<Button type=\"primary\" shape=\"round\" onClick={handleAddItem}>添加子项</Button>}\r\n                            >\r\n                                <Form\r\n                                    form={form2}\r\n                                    layout=\"inline\"\r\n                                    initialValues={{\r\n                                        ['item_is_required']: true,\r\n                                        ['item_is_readonly']: false\r\n                                    }}\r\n                                >\r\n                                    <Form.Item label=\"表单子项名称\" name=\"item_name\">\r\n                                        <Input placeholder=\"请输入表单子项名称\" />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"表单子项输入形式\" name=\"item_submit_type\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"input\">文字输入</Select.Option>\r\n                                            <Select.Option value=\"select\">下拉选择</Select.Option>\r\n                                            <Select.Option value=\"upload\">图片上传</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"是否必填\" name=\"item_is_required\" valuePropName=\"checked\">\r\n                                        <Switch />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"是否只读\" name=\"item_is_readonly\" valuePropName=\"checked\">\r\n                                        <Switch />\r\n                                    </Form.Item>\r\n                                    <Form.Item label=\"子项所占行距\" name=\"item_span\">\r\n                                        <Select style={{ width: '200px' }}>\r\n                                            <Select.Option value=\"8\">1/3 行</Select.Option>\r\n                                            <Select.Option value=\"12\">1/2 行</Select.Option>\r\n                                            <Select.Option value=\"24\">1 行</Select.Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Card>\r\n                            <Card\r\n                                title=\"表单子项列表\"\r\n                                bodyStyle={{ padding: '0' }}\r\n                            >\r\n                                <Table\r\n                                    pagination={false}\r\n                                    columns={columns}\r\n                                    dataSource={dataSource}\r\n                                    rowKey=\"index\"\r\n                                    bordered\r\n                                    components={{\r\n                                        body: {\r\n                                            wrapper: DraggableContainer,\r\n                                            row: DraggableBodyRow,\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            </Card>\r\n                        </Space>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Space direction=\"vertical\" size={16} style={{ width: '100%' }}>\r\n                            <Card\r\n                                title=\"表单预览\"\r\n                                bodyStyle={{ padding: '0 25px 25px 25px' }}\r\n                            >\r\n                                <PreviewForm basicOptions={basicOptions} formItemProps={formItemProps} />\r\n                            </Card>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n","D:\\fuzzy work\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.tsx",["107"],{"ruleId":"108","severity":1,"message":"109","line":4,"column":47,"nodeType":"110","messageId":"111","endLine":4,"endColumn":55},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"108","severity":1,"message":"116","line":9,"column":19,"nodeType":"110","messageId":"111","endLine":9,"endColumn":29},{"ruleId":"117","severity":1,"message":"118","line":31,"column":32,"nodeType":"119","messageId":"120","endLine":31,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":31,"column":46,"nodeType":"119","messageId":"120","endLine":31,"endColumn":47},{"ruleId":"121","severity":1,"message":"122","line":41,"column":60,"nodeType":"123","endLine":41,"endColumn":63},{"ruleId":"108","severity":1,"message":"124","line":8,"column":5,"nodeType":"110","messageId":"111","endLine":8,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":29,"column":60,"nodeType":"123","endLine":29,"endColumn":63},{"ruleId":"117","severity":1,"message":"118","line":39,"column":32,"nodeType":"119","messageId":"120","endLine":39,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":39,"column":46,"nodeType":"119","messageId":"120","endLine":39,"endColumn":47},{"ruleId":"108","severity":1,"message":"125","line":1,"column":58,"nodeType":"110","messageId":"111","endLine":1,"endColumn":66},{"ruleId":"126","severity":1,"message":"127","line":20,"column":86,"nodeType":"128","messageId":"129","endLine":20,"endColumn":105,"fix":"130"},{"ruleId":"126","severity":1,"message":"131","line":160,"column":41,"nodeType":"128","messageId":"129","endLine":160,"endColumn":67,"fix":"132"},{"ruleId":"126","severity":1,"message":"133","line":161,"column":41,"nodeType":"128","messageId":"129","endLine":161,"endColumn":68,"fix":"134"},{"ruleId":"108","severity":1,"message":"135","line":24,"column":10,"nodeType":"110","messageId":"111","endLine":24,"endColumn":18},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["136"],"no-negated-in-lhs",["137"],"'setIsLogin' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InputNumber' is defined but never used.","'useState' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['remember'] found.","Property","unnecessarilyComputedProperty",{"range":"138","text":"139"},"Unnecessarily computed property ['item_is_required'] found.",{"range":"140","text":"141"},"Unnecessarily computed property ['item_is_readonly'] found.",{"range":"142","text":"143"},"'isIFrame' is defined but never used.","no-global-assign","no-unsafe-negation",[561,573],"'remember'",[6162,6182],"'item_is_required'",[6231,6251],"'item_is_readonly'"]