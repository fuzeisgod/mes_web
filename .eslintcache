[{"D:\\mes_web\\src\\index.tsx":"1","D:\\mes_web\\src\\App.tsx":"2","D:\\mes_web\\src\\routes\\index.ts":"3","D:\\mes_web\\src\\views\\index.ts":"4","D:\\mes_web\\src\\views\\notFound\\index.tsx":"5","D:\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx":"6","D:\\mes_web\\src\\components\\index.ts":"7","D:\\mes_web\\src\\components\\PreviewForm\\index.tsx":"8","D:\\mes_web\\src\\components\\Loading\\index.tsx":"9","D:\\mes_web\\src\\components\\Frame\\index.tsx":"10","D:\\mes_web\\src\\tools\\index.ts":"11","D:\\mes_web\\src\\views\\productionOrders\\index.tsx":"12","D:\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx":"13","D:\\mes_web\\src\\views\\staffManagement\\index.tsx":"14","D:\\mes_web\\src\\views\\ordersStandingBook\\index.tsx":"15","D:\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx":"16","D:\\mes_web\\src\\views\\login\\index.tsx":"17","D:\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.js":"18","D:\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.js":"19"},{"size":786,"mtime":1609007061481,"results":"20","hashOfConfig":"21"},{"size":1558,"mtime":1609054624202,"results":"22","hashOfConfig":"21"},{"size":2313,"mtime":1609003184378,"results":"23","hashOfConfig":"21"},{"size":1143,"mtime":1609072843321,"results":"24","hashOfConfig":"21"},{"size":559,"mtime":1609071472159,"results":"25","hashOfConfig":"21"},{"size":2115,"mtime":1609003184380,"results":"26","hashOfConfig":"21"},{"size":146,"mtime":1609003184377,"results":"27","hashOfConfig":"21"},{"size":3106,"mtime":1609070246618,"results":"28","hashOfConfig":"21"},{"size":258,"mtime":1609003184376,"results":"29","hashOfConfig":"21"},{"size":4751,"mtime":1609070159479,"results":"30","hashOfConfig":"21"},{"size":301,"mtime":1609070459616,"results":"31","hashOfConfig":"21"},{"size":5405,"mtime":1609071515870,"results":"32","hashOfConfig":"21"},{"size":4111,"mtime":1609071526073,"results":"33","hashOfConfig":"21"},{"size":5658,"mtime":1609003184387,"results":"34","hashOfConfig":"21"},{"size":3530,"mtime":1609071488553,"results":"35","hashOfConfig":"21"},{"size":2663,"mtime":1609003184381,"results":"36","hashOfConfig":"21"},{"size":1661,"mtime":1609071459757,"results":"37","hashOfConfig":"21"},{"size":12759,"mtime":1609072675928,"results":"38","hashOfConfig":"21"},{"size":9992,"mtime":1609072818115,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"18beu3v",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},"D:\\mes_web\\src\\index.tsx",["85"],"import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport { ConfigProvider } from 'antd';\r\nimport zhCN from 'antd/lib/locale/zh_CN';\r\nimport { mainRoutes } from './routes'\r\n\r\nReactDOM.render(\r\n  <ConfigProvider locale={zhCN}>\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            mainRoutes.map(route => (\r\n              <Route path={route.pathName} component={route.component} key={route.pathName} />\r\n            ))\r\n          }\r\n          <Route path=\"/\" component={App} />\r\n        </Switch>\r\n      </Router>\r\n    </Suspense>\r\n  </ConfigProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n",["86","87"],"D:\\mes_web\\src\\App.tsx",["88","89"],"import './App.less'\r\nimport { Frame, Loading } from './components';\r\nimport { Suspense, useState, FC, ReactElement } from 'react'\r\nimport { adminRoutes } from './routes'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { insertUserId } from './tools'\r\n\r\ninterface Iprops { }\r\n\r\nconst App: FC<Iprops> = ({\r\n\r\n}): ReactElement => {\r\n  const [isLogin, setIsLogin] = useState(true)\r\n\r\n  return (\r\n    isLogin\r\n      ?\r\n      <Frame>\r\n        <Suspense fallback={<Loading />}>\r\n          <Switch>\r\n            {\r\n              adminRoutes.map(route => (\r\n                route.isSubMenu ?\r\n                  route.subMenu.map(subRoute => (\r\n                    <Route\r\n                      path={subRoute.pathName}\r\n                      key={subRoute.pathName}\r\n                      component={subRoute.component}\r\n                      exact={subRoute.exact}\r\n                    />\r\n                  ))\r\n                  :\r\n                  <Route\r\n                    path={route.pathName}\r\n                    key={route.pathName}\r\n                    component={route.component}\r\n                    exact={route.exact}\r\n                  />\r\n              ))\r\n            }\r\n            <Redirect\r\n              // you need insert userid here\r\n              to={insertUserId(adminRoutes[0].pathName, 'my-userid')}\r\n              from=\"/\"\r\n              exact />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Frame>\r\n      :\r\n      <Redirect to=\"/login\" />\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","D:\\mes_web\\src\\routes\\index.ts",[],"D:\\mes_web\\src\\views\\index.ts",[],"D:\\mes_web\\src\\views\\notFound\\index.tsx",[],"D:\\mes_web\\src\\views\\integratedConfiguration\\partConfiguration\\index.tsx",[],"D:\\mes_web\\src\\components\\index.ts",[],"D:\\mes_web\\src\\components\\PreviewForm\\index.tsx",[],"D:\\mes_web\\src\\components\\Loading\\index.tsx",[],"D:\\mes_web\\src\\components\\Frame\\index.tsx",[],"D:\\mes_web\\src\\tools\\index.ts",[],"D:\\mes_web\\src\\views\\productionOrders\\index.tsx",["90","91","92"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb,\r\n    Space\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order.less'\r\n\r\n\r\nconst { RangePicker } = DatePicker\r\n\r\nexport default function ProductionOrders(props:any) {\r\n    const [form] = Form.useForm()\r\n    const onFinish = (values:any) => {\r\n        console.log(values)\r\n    }\r\n\r\n    const add_new_order = () => {\r\n        // you need insert userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order')\r\n    }\r\n\r\n    const columns = [\r\n        { title: '订单编号', dataIndex: 'order_id', key: 'order_id' },\r\n        { title: '设备数量', dataIndex: 'order_amount', key: 'order_amount' },\r\n        { title: '开单时间', dataIndex: 'order_start_time', key: 'order_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'order_finish_time', key: 'order_finish_time' },\r\n        { title: '是否加急', dataIndex: 'order_in_need', key: 'order_in_need' },\r\n        { title: '订单负责人', dataIndex: 'order_response_man', key: 'order_response_man' },\r\n        { title: '操作', key: 'order_action', render: () => (<a>编辑</a>) },\r\n    ]\r\n\r\n    const expandedRowRender = () => {\r\n        const columns = [\r\n            { title: '设备ID', dataIndex: 'device_id', key: 'device_id' },\r\n            { title: '设备名称', dataIndex: 'device_name', key: 'device_name' },\r\n            { title: '开始时间', dataIndex: 'device_start_time', key: 'device_start_time' },\r\n            { title: '计划完成时间', dataIndex: 'device_end_time', key: 'device_end_time' },\r\n        ]\r\n\r\n        const data = [\r\n            { key: 0, device_id: '123456', device_name: '接地箱1', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' },\r\n            { key: 0, device_id: '123456', device_name: '接地箱2', device_start_time: '2020年10月15日', device_end_time: '2020年11月1日' }\r\n        ]\r\n        return <Table bordered={true} columns={columns} dataSource={data} pagination={false} />;\r\n    }\r\n\r\n\r\n    const data = [\r\n        { key: 0, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '是', order_response_man: '张三' },\r\n        { key: 1, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '李四' },\r\n        { key: 2, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '王五' },\r\n        { key: 3, order_id: '123456789', order_amount: 2, order_start_time: '2020年1月1日', order_finish_time: '2020年12月12日', order_in_need: '否', order_response_man: '赵六' },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">流水订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"流水订单列表\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Button icon={<PlusOutlined />} shape=\"round\" type=\"primary\" onClick={add_new_order}>添加新订单</Button>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        onFinish={onFinish}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"订单编号\" name=\"order_num\">\r\n                            <Input placeholder=\"请输入订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单时间\" name=\"order_time\">\r\n                            <RangePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"订单责任人\" name=\"order_response\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"zhangsan\">张三</Select.Option>\r\n                                <Select.Option value=\"lisi\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                查询\r\n                        </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Table\r\n                        bordered={true}\r\n                        columns={columns}\r\n                        expandable={{ expandedRowRender }}\r\n                        dataSource={data}\r\n                    />\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\mes_web\\src\\views\\productionOrders\\productionOrdersAdd\\index.tsx",["93","94","95"],"import React from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Space,\r\n    Form,\r\n    Input,\r\n    InputNumber,\r\n    DatePicker,\r\n    Switch,\r\n    Select,\r\n    Divider,\r\n    Table,\r\n    Breadcrumb\r\n} from 'antd'\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons'\r\nimport './production_order_add.less'\r\n\r\nexport default function ProductionOrdersAdd(props: any) {\r\n    const [form] = Form.useForm()\r\n    const columns = [\r\n        { title: '设备ID', dataIndex: 'device_id', key: 'device_id' },\r\n        { title: '设备名称', dataIndex: 'device_name', key: 'device_name' },\r\n        { title: '开始时间', dataIndex: 'device_start_time', key: 'device_start_time' },\r\n        { title: '计划完成时间', dataIndex: 'device_finish_time', key: 'device_finish_time' },\r\n    ]\r\n\r\n    const add_new_work = () => {\r\n        // you need add userid here\r\n        props.history.push('/' + 'my-userid' + '/po/edit_order/edit_work')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Space direction=\"vertical\" size={8} style={{ width: '100%' }}>\r\n                <div className=\"bread-area\">\r\n                    <div style={{ paddingRight: '5px' }}>当前路径：</div>\r\n                    <Breadcrumb separator=\">\">\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\" onClick={() => { props.history.go(-1) }}>流水订单列表</span>\r\n                        </Breadcrumb.Item>\r\n                        <Breadcrumb.Item>\r\n                            <span className=\"bread-item\">订单编辑</span>\r\n                        </Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </div>\r\n                <Card\r\n                    title=\"添加新订单\"\r\n                    loading={false}\r\n                    // bodyStyle={{ background: '#fafafa' }}\r\n                    headStyle={{ fontWeight: 'bold' }}\r\n                    extra={\r\n                        <Space size={16}>\r\n                            <Button type=\"primary\" shape=\"round\">提交保存</Button>\r\n                            <Button type=\"default\" shape=\"round\">取消</Button>\r\n                        </Space>\r\n                    }\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                        layout=\"inline\"\r\n                    >\r\n                        <Form.Item label=\"订单编号\" name=\"order_id\">\r\n                            <Input placeholder=\"请输入订单编号\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"开单时间\" name=\"order_start_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"计划完成时间\" name=\"order_finish_time\">\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"是否加急\" name=\"order_in_need\">\r\n                            <Switch checkedChildren=\"加急\" unCheckedChildren=\"正常\" className=\"order-form-switch\" />\r\n                        </Form.Item>\r\n                        <Form.Item label=\"项目负责人\" name=\"order_response_man\">\r\n                            <Select style={{ width: '120px' }}>\r\n                                <Select.Option value=\"zhangsan\">张三</Select.Option>\r\n                                <Select.Option value=\"lisi\">李四</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                    <Divider />\r\n                    <Card\r\n                        title=\"流水订单包含设备\"\r\n                        headStyle={{ fontWeight: 'bold' }}\r\n                        extra={<Button type=\"primary\" shape=\"round\" icon={<PlusOutlined />} onClick={add_new_work}>添加新设备</Button>}\r\n                    >\r\n                        <Table\r\n                            bordered={true}\r\n                            columns={columns}\r\n                        />\r\n                    </Card>\r\n                </Card>\r\n            </Space>\r\n        </>\r\n    )\r\n}\r\n","D:\\mes_web\\src\\views\\staffManagement\\index.tsx",["96"],"import React from 'react'\r\nimport {\r\n    Tree,\r\n    Switch,\r\n    Card,\r\n    Tooltip,\r\n    Input,\r\n    Button,\r\n    Form,\r\n    Select,\r\n    Divider\r\n} from 'antd'\r\nimport { FormOutlined, UserOutlined } from '@ant-design/icons';\r\nimport './staff_management.less'\r\n\r\nconst treeData = [\r\n    {\r\n        title: '车间A',\r\n        key: '0-0',\r\n        children: [\r\n            {\r\n                title: '工人1',\r\n                key: '0-0-0',\r\n                icon: <UserOutlined />\r\n            },\r\n            {\r\n                title: '工人2',\r\n                key: '0-0-1',\r\n                icon: <UserOutlined />\r\n            }\r\n        ],\r\n    },\r\n    {\r\n        title: '车间B',\r\n        key: '0-1',\r\n        children: [\r\n            {\r\n                title: '工人3',\r\n                key: '0-1-0',\r\n                icon: <UserOutlined />\r\n            },\r\n            {\r\n                title: '工人4',\r\n                key: '0-1-1',\r\n                icon: <UserOutlined />\r\n            }\r\n        ],\r\n    }\r\n];\r\n\r\nexport default function StaffManagement() {\r\n    const [form] = Form.useForm()\r\n    const onSelect = (selectedKeys, info) => {\r\n        console.log('selected', selectedKeys, info);\r\n    };\r\n\r\n    const handleChange = () => {\r\n        console.log(form.getFieldsValue())\r\n    }\r\n\r\n    return (\r\n        <div className=\"staff-manage-page\">\r\n            <div className=\"tree-slider\">\r\n                <Card\r\n                    title=\"员工列表\"\r\n                    extra={<Tooltip title=\"编辑员工列表\" color=\"#40a9ff\"><FormOutlined style={{ fontSize: '16px', cursor: 'pointer' }} /></Tooltip>}\r\n                    headStyle={{ textAlign: 'center' }}\r\n                    bodyStyle={{ padding: '0' }}\r\n                >\r\n                    <div className=\"search-box\">\r\n                        <Input placeholder=\"请输入员工姓名或工号\" />\r\n                    </div>\r\n                    <div className=\"tree-box\">\r\n                        <Tree\r\n                            showLine={{ showLeafIcon: false }}\r\n                            showIcon={true}\r\n                            defaultExpandAll={true}\r\n                            onSelect={onSelect}\r\n                            treeData={treeData}\r\n                        />\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n            <div className=\"staff-info\">\r\n                <Card\r\n                    title=\"员工信息\"\r\n                    extra={<Button type=\"primary\" shape=\"round\" onClick={handleChange}>保存修改</Button>}\r\n                >\r\n                    <Form\r\n                        form={form}\r\n                    >\r\n                        <Form.Item\r\n                            label=\"员工姓名\"\r\n                            name=\"staff-name\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入姓名\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"员工岗位\"\r\n                            name=\"staff-station\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '250px' }}\r\n                                placeholder=\"请选择岗位\"\r\n                            >\r\n                                <Select.Option value=\"1\">岗位1</Select.Option>\r\n                                <Select.Option value=\"2\">岗位2</Select.Option>\r\n                                <Select.Option value=\"3\">岗位3</Select.Option>\r\n                                <Select.Option value=\"4\">岗位4</Select.Option>\r\n                                <Select.Option value=\"5\">岗位5</Select.Option>\r\n                                <Select.Option value=\"6\">岗位6</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">可选分配账号</Divider>\r\n                        <Form.Item\r\n                            label=\"员工账号\"\r\n                            name=\"staff-account\"\r\n                        >\r\n                            <Input style={{ width: '200px' }} placeholder=\"请输入账号\" allowClear />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"账号密码\"\r\n                            name=\"staff-password\"\r\n                        >\r\n                            <Input.Password style={{ width: '200px' }} placeholder=\"请输入密码\" />\r\n                        </Form.Item>\r\n                        <Divider orientation=\"left\">权限分配</Divider>\r\n                        <Form.Item\r\n                            label=\"权限选择\"\r\n                            name=\"staff-authority\"\r\n                        >\r\n                            <Select\r\n                                mode=\"multiple\"\r\n                                allowClear\r\n                                style={{ width: '500px' }}\r\n                                placeholder=\"请选择此角色拥有权限\"\r\n                            >\r\n                                <Select.Option value=\"1\">权限1</Select.Option>\r\n                                <Select.Option value=\"2\">权限2</Select.Option>\r\n                                <Select.Option value=\"3\">权限3</Select.Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\mes_web\\src\\views\\ordersStandingBook\\index.tsx",[],"D:\\mes_web\\src\\views\\integratedConfiguration\\processConfiguration\\index.tsx",[],"D:\\mes_web\\src\\views\\login\\index.tsx",["97"],"import React from 'react'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Checkbox\r\n} from 'antd'\r\nimport './login.less'\r\n\r\nexport default function Login(props: any) {\r\n    const handleLogin = (values: any) => {\r\n        console.log(values)\r\n        // need save userid here ...\r\n        props.history.push('/')\r\n    }\r\n    return (\r\n        <div className=\"login-page\">\r\n            <div className=\"login-box\">\r\n                <h1 className=\"login-title\">新图维追溯管理系统</h1>\r\n                <Form className=\"login-form\" onFinish={handleLogin} initialValues={{ ['remember']: false }}>\r\n                    <Form.Item name=\"account\" style={{ paddingBottom: '0px' }}>\r\n                        <Input\r\n                            addonBefore=\"账号\"\r\n                            allowClear\r\n                            placeholder=\"请输入账号\"\r\n                            className=\"first-input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"password\" style={{ paddingTop: '0px' }}>\r\n                        <Input.Password\r\n                            addonBefore=\"密码\"\r\n                            placeholder=\"请输入密码\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"remember\" valuePropName=\"checked\">\r\n                        <Checkbox>记住我</Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button block type=\"primary\" htmlType=\"submit\">登录</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\mes_web\\src\\views\\productionOrders\\productionOrdersAddWork\\index.js",[],"D:\\mes_web\\src\\views\\integratedConfiguration\\formConfiguration\\index.js",["98","99"],{"ruleId":"100","severity":1,"message":"101","line":4,"column":47,"nodeType":"102","messageId":"103","endLine":4,"endColumn":55},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":10,"column":26,"nodeType":"110","messageId":"111","endLine":12,"endColumn":2},{"ruleId":"100","severity":1,"message":"112","line":13,"column":19,"nodeType":"102","messageId":"103","endLine":13,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":30,"column":32,"nodeType":"115","messageId":"116","endLine":30,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":30,"column":46,"nodeType":"115","messageId":"116","endLine":30,"endColumn":47},{"ruleId":"117","severity":1,"message":"118","line":40,"column":60,"nodeType":"119","endLine":40,"endColumn":63},{"ruleId":"100","severity":1,"message":"120","line":8,"column":5,"nodeType":"102","messageId":"103","endLine":8,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":32,"column":32,"nodeType":"115","messageId":"116","endLine":32,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":32,"column":46,"nodeType":"115","messageId":"116","endLine":32,"endColumn":47},{"ruleId":"100","severity":1,"message":"121","line":4,"column":5,"nodeType":"102","messageId":"103","endLine":4,"endColumn":11},{"ruleId":"122","severity":1,"message":"123","line":20,"column":86,"nodeType":"124","messageId":"125","endLine":20,"endColumn":105,"fix":"126"},{"ruleId":"122","severity":1,"message":"127","line":160,"column":41,"nodeType":"124","messageId":"125","endLine":160,"endColumn":67,"fix":"128"},{"ruleId":"122","severity":1,"message":"129","line":161,"column":41,"nodeType":"124","messageId":"125","endLine":161,"endColumn":68,"fix":"130"},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setIsLogin' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'InputNumber' is defined but never used.","'Switch' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['remember'] found.","Property","unnecessarilyComputedProperty",{"range":"133","text":"134"},"Unnecessarily computed property ['item_is_required'] found.",{"range":"135","text":"136"},"Unnecessarily computed property ['item_is_readonly'] found.",{"range":"137","text":"138"},"no-global-assign","no-unsafe-negation",[561,573],"'remember'",[6162,6182],"'item_is_required'",[6231,6251],"'item_is_readonly'"]